// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/KoalaAI_G2C.proto
// Protobuf C++ Version: 5.27.0-dev

#include "KoalaAI_G2C.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace msg {
namespace g2c {

inline constexpr Vector3D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3D::Vector3D(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Vector3DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DDefaultTypeInternal() {}
  union {
    Vector3D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DDefaultTypeInternal _Vector3D_default_instance_;

inline constexpr MapInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mapname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mapid_{0u},
        maptype_{static_cast< ::msg::g2c::MapType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MapInfo::MapInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MapInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapInfoDefaultTypeInternal() {}
  union {
    MapInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapInfoDefaultTypeInternal _MapInfo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR LinkRsp::LinkRsp(::_pbi::ConstantInitialized) {}
struct LinkRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkRspDefaultTypeInternal() {}
  union {
    LinkRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkRspDefaultTypeInternal _LinkRsp_default_instance_;

inline constexpr FrameDatas::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : triggerevent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FrameDatas::FrameDatas(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FrameDatasDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameDatasDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameDatasDefaultTypeInternal() {}
  union {
    FrameDatas _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameDatasDefaultTypeInternal _FrameDatas_default_instance_;

inline constexpr EventInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : eventdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        type_{static_cast< ::msg::g2c::EventType >(0)},
        sourceagentid_{::uint64_t{0u}},
        targetagentid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventInfo::EventInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EventInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventInfoDefaultTypeInternal() {}
  union {
    EventInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventInfoDefaultTypeInternal _EventInfo_default_instance_;

inline constexpr AgentPropState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : durable_{0u},
        usecount_{0u},
        cd_{0u},
        curcd_{0u},
        incd_{false},
        propfunctype_{static_cast< ::msg::g2c::PropFuncType >(0)},
        delayeddestroy_{0u},
        playerpropusetype_{static_cast< ::msg::g2c::PropUseType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentPropState::AgentPropState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AgentPropStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentPropStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentPropStateDefaultTypeInternal() {}
  union {
    AgentPropState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentPropStateDefaultTypeInternal _AgentPropState_default_instance_;

inline constexpr TimerState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : framedatas_{},
        id_{0u},
        isstart_{false},
        isend_{false},
        islaunched_{false},
        ispaused_{false},
        currenttime_{0},
        targettime_{0},
        reclocking_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TimerState::TimerState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimerStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimerStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimerStateDefaultTypeInternal() {}
  union {
    TimerState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimerStateDefaultTypeInternal _TimerState_default_instance_;

inline constexpr TargetPointInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        rot_{nullptr},
        size_{nullptr},
        id_{::uint64_t{0u}},
        isdestination_{false},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TargetPointInfo::TargetPointInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TargetPointInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TargetPointInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TargetPointInfoDefaultTypeInternal() {}
  union {
    TargetPointInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TargetPointInfoDefaultTypeInternal _TargetPointInfo_default_instance_;

inline constexpr PropState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        rot_{nullptr},
        size_{nullptr},
        speed_{nullptr},
        id_{::uint64_t{0u}},
        propfunctype_{static_cast< ::msg::g2c::PropFuncType >(0)},
        usetype_{static_cast< ::msg::g2c::PropUseType >(0)},
        durable_{0u},
        cd_{0u},
        delayeddestroy_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PropState::PropState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PropStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropStateDefaultTypeInternal() {}
  union {
    PropState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropStateDefaultTypeInternal _PropState_default_instance_;

inline constexpr MapHeightInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        heightvalue_{},
        originpos_{nullptr},
        granularityheight_{0},
        granularitywidth_{0},
        mapheight_{0},
        mapwidth_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MapHeightInfo::MapHeightInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MapHeightInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapHeightInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapHeightInfoDefaultTypeInternal() {}
  union {
    MapHeightInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapHeightInfoDefaultTypeInternal _MapHeightInfo_default_instance_;

inline constexpr ItemWayPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        normal_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ItemWayPoint::ItemWayPoint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ItemWayPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemWayPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemWayPointDefaultTypeInternal() {}
  union {
    ItemWayPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemWayPointDefaultTypeInternal _ItemWayPoint_default_instance_;

inline constexpr GamePointInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        rot_{nullptr},
        size_{nullptr},
        id_{::uint64_t{0u}},
        type_{static_cast< ::msg::g2c::GamePointType >(0)},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GamePointInfo::GamePointInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GamePointInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GamePointInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GamePointInfoDefaultTypeInternal() {}
  union {
    GamePointInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GamePointInfoDefaultTypeInternal _GamePointInfo_default_instance_;

inline constexpr GameGlobalInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mapinfo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameGlobalInfo::GameGlobalInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameGlobalInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameGlobalInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameGlobalInfoDefaultTypeInternal() {}
  union {
    GameGlobalInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameGlobalInfoDefaultTypeInternal _GameGlobalInfo_default_instance_;

inline constexpr AgentState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        passtargetpoint_{},
        _passtargetpoint_cached_byte_size_{0},
        pos_{nullptr},
        rot_{nullptr},
        vel_{nullptr},
        agentprop_{nullptr},
        forward_{nullptr},
        right_{nullptr},
        up_{nullptr},
        goalpoint_{nullptr},
        id_{::uint64_t{0u}},
        animationstate_{static_cast< ::msg::g2c::AnimationStateType >(0)},
        endgamestate_{static_cast< ::msg::g2c::EndGameType >(0)},
        donotctrl_{false},
        invincible_{false},
        curhp_{0},
        maxhp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentState::AgentState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AgentStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentStateDefaultTypeInternal() {}
  union {
    AgentState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentStateDefaultTypeInternal _AgentState_default_instance_;

inline constexpr ItemState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        waypoints_{},
        itemfuncdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pos_{nullptr},
        rot_{nullptr},
        size_{nullptr},
        velocity_{nullptr},
        angularvelocity_{nullptr},
        id_{::uint64_t{0u}},
        shapetype_{static_cast< ::msg::g2c::ShapeType >(0)},
        functype_{static_cast< ::msg::g2c::ItemFuncType >(0)},
        createbyprop_{::uint64_t{0u}},
        itemtemplateid_{0u},
        propitemlevel_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ItemState::ItemState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ItemStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemStateDefaultTypeInternal() {}
  union {
    ItemState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemStateDefaultTypeInternal _ItemState_default_instance_;

inline constexpr GameState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : targetpointsinfo_{},
        timestamp_{::uint64_t{0u}},
        timeleft_{0},
        mapid_{0u},
        isgameend_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameState::GameState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateDefaultTypeInternal() {}
  union {
    GameState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateDefaultTypeInternal _GameState_default_instance_;

inline constexpr GameInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gamepoints_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameInfo::GameInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameInfoDefaultTypeInternal() {}
  union {
    GameInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameInfoDefaultTypeInternal _GameInfo_default_instance_;

inline constexpr GameMassage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agentsstate_{},
        itemsstate_{},
        propsstate_{},
        eventsinfo_{},
        timersstate_{},
        gameglobalinfo_{nullptr},
        gameinfo_{nullptr},
        gamestate_{nullptr},
        messagetype_{static_cast< ::msg::g2c::GameMsgType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GameMassage::GameMassage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameMassageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameMassageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameMassageDefaultTypeInternal() {}
  union {
    GameMassage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameMassageDefaultTypeInternal _GameMassage_default_instance_;
}  // namespace g2c
}  // namespace msg
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[11];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fKoalaAI_5fG2C_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fKoalaAI_5fG2C_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::LinkRsp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::Vector3D, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::Vector3D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::Vector3D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::Vector3D, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapInfo, _impl_.mapname_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapInfo, _impl_.mapid_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapInfo, _impl_.maptype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameGlobalInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameGlobalInfo, _impl_.mapinfo_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemWayPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemWayPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemWayPoint, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemWayPoint, _impl_.normal_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.originpos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.granularityheight_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.granularitywidth_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.mapheight_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.mapwidth_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::MapHeightInfo, _impl_.heightvalue_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.rot_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GamePointInfo, _impl_.level_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameInfo, _impl_.gamepoints_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.isdestination_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.rot_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TargetPointInfo, _impl_.level_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _impl_.timeleft_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _impl_.mapid_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _impl_.isgameend_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameState, _impl_.targetpointsinfo_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.durable_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.usecount_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.cd_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.curcd_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.incd_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.propfunctype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.delayeddestroy_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentPropState, _impl_.playerpropusetype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.rot_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.vel_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.animationstate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.agentprop_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.donotctrl_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.endgamestate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.forward_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.right_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.up_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.passtargetpoint_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.goalpoint_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.invincible_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.curhp_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::AgentState, _impl_.maxhp_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        3,
        ~0u,
        ~0u,
        4,
        5,
        6,
        ~0u,
        7,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.rot_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.shapetype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.functype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.velocity_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.angularvelocity_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.itemfuncdata_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.waypoints_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.itemtemplateid_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.createbyprop_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::ItemState, _impl_.propitemlevel_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.rot_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.propfunctype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.usetype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.durable_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.cd_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.delayeddestroy_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::PropState, _impl_.speed_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _impl_.sourceagentid_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _impl_.targetagentid_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::EventInfo, _impl_.eventdata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::FrameDatas, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::FrameDatas, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::FrameDatas, _impl_.triggerevent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.framedatas_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.isstart_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.isend_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.islaunched_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.ispaused_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.currenttime_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.targettime_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::TimerState, _impl_.reclocking_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.messagetype_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.gameglobalinfo_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.gameinfo_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.gamestate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.agentsstate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.itemsstate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.propsstate_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.eventsinfo_),
        PROTOBUF_FIELD_OFFSET(::msg::g2c::GameMassage, _impl_.timersstate_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::msg::g2c::LinkRsp)},
        {8, -1, -1, sizeof(::msg::g2c::Vector3D)},
        {19, -1, -1, sizeof(::msg::g2c::MapInfo)},
        {30, -1, -1, sizeof(::msg::g2c::GameGlobalInfo)},
        {39, 49, -1, sizeof(::msg::g2c::ItemWayPoint)},
        {51, 65, -1, sizeof(::msg::g2c::MapHeightInfo)},
        {71, 85, -1, sizeof(::msg::g2c::GamePointInfo)},
        {91, -1, -1, sizeof(::msg::g2c::GameInfo)},
        {100, 114, -1, sizeof(::msg::g2c::TargetPointInfo)},
        {120, -1, -1, sizeof(::msg::g2c::GameState)},
        {133, -1, -1, sizeof(::msg::g2c::AgentPropState)},
        {149, 173, -1, sizeof(::msg::g2c::AgentState)},
        {189, 210, -1, sizeof(::msg::g2c::ItemState)},
        {223, 241, -1, sizeof(::msg::g2c::PropState)},
        {251, -1, -1, sizeof(::msg::g2c::EventInfo)},
        {264, -1, -1, sizeof(::msg::g2c::FrameDatas)},
        {274, -1, -1, sizeof(::msg::g2c::TimerState)},
        {291, 308, -1, sizeof(::msg::g2c::GameMassage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::msg::g2c::_LinkRsp_default_instance_._instance,
    &::msg::g2c::_Vector3D_default_instance_._instance,
    &::msg::g2c::_MapInfo_default_instance_._instance,
    &::msg::g2c::_GameGlobalInfo_default_instance_._instance,
    &::msg::g2c::_ItemWayPoint_default_instance_._instance,
    &::msg::g2c::_MapHeightInfo_default_instance_._instance,
    &::msg::g2c::_GamePointInfo_default_instance_._instance,
    &::msg::g2c::_GameInfo_default_instance_._instance,
    &::msg::g2c::_TargetPointInfo_default_instance_._instance,
    &::msg::g2c::_GameState_default_instance_._instance,
    &::msg::g2c::_AgentPropState_default_instance_._instance,
    &::msg::g2c::_AgentState_default_instance_._instance,
    &::msg::g2c::_ItemState_default_instance_._instance,
    &::msg::g2c::_PropState_default_instance_._instance,
    &::msg::g2c::_EventInfo_default_instance_._instance,
    &::msg::g2c::_FrameDatas_default_instance_._instance,
    &::msg::g2c::_TimerState_default_instance_._instance,
    &::msg::g2c::_GameMassage_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fKoalaAI_5fG2C_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027proto/KoalaAI_G2C.proto\022\007msg.g2c\"\t\n\007Li"
    "nkRsp\"+\n\010Vector3D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022"
    "\t\n\001z\030\003 \001(\002\"L\n\007MapInfo\022\017\n\007mapName\030\001 \001(\t\022\r"
    "\n\005mapId\030\002 \001(\r\022!\n\007mapType\030\003 \001(\0162\020.msg.g2c"
    ".MapType\"3\n\016GameGlobalInfo\022!\n\007mapInfo\030\001 "
    "\003(\0132\020.msg.g2c.MapInfo\"Q\n\014ItemWayPoint\022\036\n"
    "\003pos\030\001 \001(\0132\021.msg.g2c.Vector3D\022!\n\006normal\030"
    "\002 \001(\0132\021.msg.g2c.Vector3D\"\244\001\n\rMapHeightIn"
    "fo\022$\n\toriginPos\030\001 \001(\0132\021.msg.g2c.Vector3D"
    "\022\031\n\021granularityHeight\030\002 \001(\002\022\030\n\020granulari"
    "tyWidth\030\003 \001(\002\022\021\n\tmapHeight\030\004 \001(\002\022\020\n\010mapW"
    "idth\030\005 \001(\002\022\023\n\013heightValue\030\006 \003(\002\"\261\001\n\rGame"
    "PointInfo\022\n\n\002id\030\001 \001(\004\022$\n\004type\030\002 \001(\0162\026.ms"
    "g.g2c.GamePointType\022\036\n\003pos\030\003 \001(\0132\021.msg.g"
    "2c.Vector3D\022\036\n\003rot\030\004 \001(\0132\021.msg.g2c.Vecto"
    "r3D\022\037\n\004size\030\005 \001(\0132\021.msg.g2c.Vector3D\022\r\n\005"
    "level\030\006 \001(\r\"6\n\010GameInfo\022*\n\ngamePoints\030\001 "
    "\003(\0132\026.msg.g2c.GamePointInfo\"\244\001\n\017TargetPo"
    "intInfo\022\n\n\002id\030\001 \001(\004\022\025\n\risDestination\030\002 \001"
    "(\010\022\036\n\003pos\030\003 \001(\0132\021.msg.g2c.Vector3D\022\036\n\003ro"
    "t\030\004 \001(\0132\021.msg.g2c.Vector3D\022\037\n\004size\030\005 \001(\013"
    "2\021.msg.g2c.Vector3D\022\r\n\005level\030\006 \001(\r\"\206\001\n\tG"
    "ameState\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010timeLeft\030"
    "\002 \001(\002\022\r\n\005mapId\030\003 \001(\r\022\021\n\tisGameEnd\030\004 \001(\010\022"
    "2\n\020targetPointsInfo\030\005 \003(\0132\030.msg.g2c.Targ"
    "etPointInfo\"\322\001\n\016AgentPropState\022\017\n\007durabl"
    "e\030\001 \001(\r\022\020\n\010useCount\030\002 \001(\r\022\n\n\002cd\030\003 \001(\r\022\r\n"
    "\005curCD\030\004 \001(\r\022\014\n\004inCD\030\005 \001(\010\022+\n\014propFuncTy"
    "pe\030\006 \001(\0162\025.msg.g2c.PropFuncType\022\026\n\016delay"
    "edDestroy\030\007 \001(\r\022/\n\021playerPropUseType\030\010 \001"
    "(\0162\024.msg.g2c.PropUseType\"\356\003\n\nAgentState\022"
    "\n\n\002id\030\001 \001(\004\022\036\n\003pos\030\002 \001(\0132\021.msg.g2c.Vecto"
    "r3D\022\036\n\003rot\030\003 \001(\0132\021.msg.g2c.Vector3D\022\036\n\003v"
    "el\030\004 \001(\0132\021.msg.g2c.Vector3D\0223\n\016animation"
    "State\030\005 \001(\0162\033.msg.g2c.AnimationStateType"
    "\022*\n\tagentProp\030\006 \001(\0132\027.msg.g2c.AgentPropS"
    "tate\022\021\n\tdoNotCtrl\030\007 \001(\010\022*\n\014endGameState\030"
    "\010 \001(\0162\024.msg.g2c.EndGameType\022\"\n\007forward\030\t"
    " \001(\0132\021.msg.g2c.Vector3D\022 \n\005right\030\n \001(\0132\021"
    ".msg.g2c.Vector3D\022\035\n\002up\030\013 \001(\0132\021.msg.g2c."
    "Vector3D\022\027\n\017passTargetPoint\030\014 \003(\r\022$\n\tgoa"
    "lPoint\030\r \001(\0132\021.msg.g2c.Vector3D\022\022\n\nInvin"
    "cible\030\016 \001(\010\022\r\n\005curHP\030\017 \001(\002\022\r\n\005maxHP\030\020 \001("
    "\002\"\236\003\n\tItemState\022\n\n\002id\030\001 \001(\004\022\036\n\003pos\030\002 \001(\013"
    "2\021.msg.g2c.Vector3D\022\036\n\003rot\030\003 \001(\0132\021.msg.g"
    "2c.Vector3D\022\037\n\004size\030\004 \001(\0132\021.msg.g2c.Vect"
    "or3D\022%\n\tshapeType\030\005 \001(\0162\022.msg.g2c.ShapeT"
    "ype\022\'\n\010funcType\030\006 \001(\0162\025.msg.g2c.ItemFunc"
    "Type\022#\n\010velocity\030\007 \001(\0132\021.msg.g2c.Vector3"
    "D\022*\n\017angularVelocity\030\010 \001(\0132\021.msg.g2c.Vec"
    "tor3D\022\024\n\014itemFuncData\030\t \001(\t\022(\n\twayPoints"
    "\030\n \003(\0132\025.msg.g2c.ItemWayPoint\022\026\n\016itemTem"
    "plateId\030\013 \001(\r\022\024\n\014createByProp\030\014 \001(\004\022\025\n\rp"
    "ropItemLevel\030\r \001(\r\"\243\002\n\tPropState\022\n\n\002id\030\001"
    " \001(\004\022\036\n\003pos\030\002 \001(\0132\021.msg.g2c.Vector3D\022\036\n\003"
    "rot\030\003 \001(\0132\021.msg.g2c.Vector3D\022\037\n\004size\030\004 \001"
    "(\0132\021.msg.g2c.Vector3D\022+\n\014propFuncType\030\005 "
    "\001(\0162\025.msg.g2c.PropFuncType\022%\n\007useType\030\006 "
    "\001(\0162\024.msg.g2c.PropUseType\022\017\n\007durable\030\007 \001"
    "(\r\022\n\n\002cd\030\010 \001(\r\022\026\n\016delayedDestroy\030\t \001(\r\022 "
    "\n\005speed\030\n \001(\0132\021.msg.g2c.Vector3D\"z\n\tEven"
    "tInfo\022\n\n\002id\030\001 \001(\r\022 \n\004type\030\002 \001(\0162\022.msg.g2"
    "c.EventType\022\025\n\rsourceAgentId\030\003 \001(\004\022\025\n\rta"
    "rgetAgentId\030\004 \001(\004\022\021\n\teventData\030\005 \001(\t\"0\n\n"
    "FrameDatas\022\014\n\004time\030\001 \001(\002\022\024\n\014triggerEvent"
    "\030\002 \001(\t\"\304\001\n\nTimerState\022\n\n\002id\030\001 \001(\r\022\'\n\nfra"
    "meDatas\030\002 \003(\0132\023.msg.g2c.FrameDatas\022\017\n\007is"
    "Start\030\003 \001(\010\022\r\n\005isEnd\030\004 \001(\010\022\022\n\nisLaunched"
    "\030\005 \001(\010\022\020\n\010isPaused\030\006 \001(\010\022\023\n\013currentTime\030"
    "\007 \001(\002\022\022\n\ntargetTime\030\010 \001(\002\022\022\n\nreClocking\030"
    "\t \001(\010\"\201\003\n\013GameMassage\022)\n\013messageType\030\001 \001"
    "(\0162\024.msg.g2c.GameMsgType\022/\n\016gameGlobalIn"
    "fo\030\002 \001(\0132\027.msg.g2c.GameGlobalInfo\022#\n\010gam"
    "eInfo\030\003 \001(\0132\021.msg.g2c.GameInfo\022%\n\tgameSt"
    "ate\030\004 \001(\0132\022.msg.g2c.GameState\022(\n\013agentsS"
    "tate\030\005 \003(\0132\023.msg.g2c.AgentState\022&\n\nitems"
    "State\030\006 \003(\0132\022.msg.g2c.ItemState\022&\n\nprops"
    "State\030\007 \003(\0132\022.msg.g2c.PropState\022&\n\nevent"
    "sInfo\030\010 \003(\0132\022.msg.g2c.EventInfo\022(\n\013timer"
    "sState\030\t \003(\0132\023.msg.g2c.TimerState*3\n\005CMD"
    "2C\022\022\n\016CMD2C_LINK_RSP\020\000\022\026\n\022CMD2C_GAME_MES"
    "SAGE\020\001*B\n\013GameMsgType\022\024\n\020GAME_GLOBAL_INF"
    "O\020\000\022\r\n\tGAME_INFO\020\001\022\016\n\nGAME_STATE\020\002*\375\001\n\022A"
    "nimationStateType\022\021\n\rUNKNOWN_STATE\020\000\022\016\n\n"
    "JUMP_STATE\020\001\022\020\n\014ATTACK_STATE\020\002\022\020\n\014SPRINT"
    "_STATE\020\003\022\027\n\023INCAPACITATED_STATE\020\004\022\017\n\013GET"
    "UP_STATE\020\005\022\022\n\016COLLAPSE_STATE\020\006\022\017\n\013DIZZY_"
    "STATE\020\007\022\017\n\013PALSY_STATE\020\010\022\020\n\014BUBBLE_STATE"
    "\020\t\022\016\n\nFALL_STATE\020\n\022\016\n\nMOVE_STATE\020\013\022\016\n\nID"
    "LE_STATE\020\014*\335\002\n\tShapeType\022\021\n\rUNKNOWN_SHAP"
    "E\020\000\022\010\n\004CUBE\020\001\022\n\n\006SPHERE\020\002\022\014\n\010CYLINDER\020\003\022"
    "\013\n\007CAPSULE\020\004\022\010\n\004RING\020\005\022\020\n\014HALFCYLINDER\020\006"
    "\022\023\n\017TRIANGULARPRISM\020\007\022\034\n\030ISOSCELESTRIANG"
    "ULARPRISM\020\010\022\020\n\014CIRCULARCONE\020\t\022\021\n\rSQUAREP"
    "YRAMID\020\n\022\024\n\020SEMICIRCULARRING\020\013\022\022\n\016HEXAGO"
    "NALPRISM\020\014\022\024\n\020HEXAGONALPYRAMID\020\r\022\026\n\022TRAP"
    "EZOIDALPYRAMID\020\016\022\031\n\025ONEFOURTHCIRCULARRIN"
    "G\020\017\022\016\n\nBASESECTOR\020\020\022\025\n\021TRIANGULARPYRAMID"
    "\020\021*\252\002\n\014ItemFuncType\022\020\n\014UNKNOWN_FUNC\020\000\022\021\n"
    "\rBASIC_PYHSICS\020\001\022\020\n\014ELECTRIC_FAN\020\002\022\017\n\013BO"
    "UNCE_WALL\020\003\022\021\n\rCONVEYOR_ZONE\020\004\022\016\n\nTRAMPO"
    "LINE\020\005\022\020\n\014SPRINGBOARDS\020\006\022\014\n\010SPEED_UP\020\007\022\013"
    "\n\007SOKOBAN\020\010\022\013\n\007OBSCURE\020\t\022\020\n\014SELF_DESTORY"
    "\020\n\022\n\n\006BUBBLE\020\013\022\010\n\004MINE\020\014\022\007\n\003RAY\020\r\022\020\n\014BAC"
    "KTRACKING\020\016\022\030\n\024TIMERCTRL_FLIP_FLOOR\020\017\022\r\n"
    "\tBOMB_LIKE\020\020\022\t\n\005TIMER\020\021*\261\001\n\tEventType\022\021\n"
    "\rUNKNOWN_EVENT\020\000\022\r\n\tFALL_DOWN\020\001\022\021\n\rARRIV"
    "E_TARGET\020\002\022\027\n\023ARRIVE_DESTRINATION\020\003\022\n\n\006A"
    "TTACK\020\004\022\027\n\023AGENT_INCAPACITATED\020\005\022\017\n\013AGEN"
    "T_GETUP\020\006\022\022\n\016AGENT_COLLAPSE\020\007\022\014\n\010USE_PRO"
    "P\020\010*\\\n\007MapType\022\013\n\007UNKNOWN\020\000\022\010\n\004RACE\020\001\022\014\n"
    "\010SURVIVAL\020\002\022\010\n\004KART\020\003\022\r\n\tTEAMSCORE\020\004\022\023\n\017"
    "INDIVIDUALSCORE\020\005*\255\001\n\014PropFuncType\022\020\n\014UN"
    "KNOWN_PROP\020\000\022\017\n\013AIR_CUSHION\020\001\022\022\n\016SMOKE_G"
    "RENADES\020\002\022\010\n\004BOMB\020\003\022\n\n\006BANANA\020\004\022\020\n\014SPRIN"
    "T_SHOES\020\005\022\016\n\nMOLE_MINES\020\006\022\021\n\rHAMSTER_BAL"
    "LS\020\007\022\016\n\nSQUID_BOMB\020\010\022\013\n\007BAZOOKA\020\t*<\n\013Pro"
    "pUseType\022\r\n\tIMMEDIATE\020\000\022\t\n\005RAISE\020\001\022\010\n\004WA"
    "VE\020\002\022\t\n\005SHOOT\020\003*5\n\rGamePointType\022\t\n\005SPAW"
    "N\020\000\022\010\n\004SAVE\020\001\022\017\n\013DESTINATION\020\002*)\n\013EndGam"
    "eType\022\007\n\003TBD\020\000\022\007\n\003WIN\020\001\022\010\n\004LOSE\020\002B\031\252\002\026Ko"
    "ala.Robot.AI.Msg.G2Cb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fKoalaAI_5fG2C_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fKoalaAI_5fG2C_2eproto = {
    false,
    false,
    4868,
    descriptor_table_protodef_proto_2fKoalaAI_5fG2C_2eproto,
    "proto/KoalaAI_G2C.proto",
    &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto_once,
    nullptr,
    0,
    18,
    schemas,
    file_default_instances,
    TableStruct_proto_2fKoalaAI_5fG2C_2eproto::offsets,
    file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto,
    file_level_service_descriptors_proto_2fKoalaAI_5fG2C_2eproto,
};
namespace msg {
namespace g2c {
const ::google::protobuf::EnumDescriptor* CMD2C_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CMD2C_internal_data_[] = {
    131072u, 0u, };
bool CMD2C_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* GameMsgType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t GameMsgType_internal_data_[] = {
    196608u, 0u, };
bool GameMsgType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* AnimationStateType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t AnimationStateType_internal_data_[] = {
    851968u, 0u, };
bool AnimationStateType_IsValid(int value) {
  return 0 <= value && value <= 12;
}
const ::google::protobuf::EnumDescriptor* ShapeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ShapeType_internal_data_[] = {
    1179648u, 0u, };
bool ShapeType_IsValid(int value) {
  return 0 <= value && value <= 17;
}
const ::google::protobuf::EnumDescriptor* ItemFuncType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t ItemFuncType_internal_data_[] = {
    1179648u, 0u, };
bool ItemFuncType_IsValid(int value) {
  return 0 <= value && value <= 17;
}
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t EventType_internal_data_[] = {
    589824u, 0u, };
bool EventType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* MapType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t MapType_internal_data_[] = {
    393216u, 0u, };
bool MapType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* PropFuncType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t PropFuncType_internal_data_[] = {
    655360u, 0u, };
bool PropFuncType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* PropUseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t PropUseType_internal_data_[] = {
    262144u, 0u, };
bool PropUseType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* GamePointType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t GamePointType_internal_data_[] = {
    196608u, 0u, };
bool GamePointType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* EndGameType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto);
  return file_level_enum_descriptors_proto_2fKoalaAI_5fG2C_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t EndGameType_internal_data_[] = {
    196608u, 0u, };
bool EndGameType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class LinkRsp::_Internal {
 public:
};

LinkRsp::LinkRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:msg.g2c.LinkRsp)
}
LinkRsp::LinkRsp(
    ::google::protobuf::Arena* arena,
    const LinkRsp& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  LinkRsp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:msg.g2c.LinkRsp)
}

const ::google::protobuf::MessageLite::ClassData*
LinkRsp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(LinkRsp, _impl_._cached_size_),
              false,
          },
          &LinkRsp::MergeImpl,
          &LinkRsp::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> LinkRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LinkRsp_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::LinkRsp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata LinkRsp::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vector3D::_Internal {
 public:
};

Vector3D::Vector3D(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.Vector3D)
}
Vector3D::Vector3D(
    ::google::protobuf::Arena* arena, const Vector3D& from)
    : Vector3D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3D::~Vector3D() {
  // @@protoc_insertion_point(destructor:msg.g2c.Vector3D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector3D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Vector3D::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Vector3D, _impl_._cached_size_),
              false,
          },
          &Vector3D::MergeImpl,
          &Vector3D::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3D::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector3D_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector3D::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.Vector3D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vector3D::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Vector3D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.Vector3D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.Vector3D)
  return target;
}

::size_t Vector3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.Vector3D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Vector3D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3D*>(&to_msg);
  auto& from = static_cast<const Vector3D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.Vector3D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3D::CopyFrom(const Vector3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.Vector3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector3D::IsInitialized() const {
  return true;
}

void Vector3D::InternalSwap(Vector3D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)
      + sizeof(Vector3D::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapInfo::_Internal {
 public:
};

MapInfo::MapInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.MapInfo)
}
inline PROTOBUF_NDEBUG_INLINE MapInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mapname_(arena, from.mapname_),
        _cached_size_{0} {}

MapInfo::MapInfo(
    ::google::protobuf::Arena* arena,
    const MapInfo& from)
    : ::google::protobuf::Message(arena) {
  MapInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mapid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mapid_),
           offsetof(Impl_, maptype_) -
               offsetof(Impl_, mapid_) +
               sizeof(Impl_::maptype_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.MapInfo)
}
inline PROTOBUF_NDEBUG_INLINE MapInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mapname_(arena),
        _cached_size_{0} {}

inline void MapInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mapid_),
           0,
           offsetof(Impl_, maptype_) -
               offsetof(Impl_, mapid_) +
               sizeof(Impl_::maptype_));
}
MapInfo::~MapInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.MapInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MapInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mapname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MapInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MapInfo, _impl_._cached_size_),
              false,
          },
          &MapInfo::MergeImpl,
          &MapInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> MapInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MapInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::MapInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string mapName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.mapname_)}},
    // uint32 mapId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapInfo, _impl_.mapid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.mapid_)}},
    // .msg.g2c.MapType mapType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MapInfo, _impl_.maptype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.maptype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string mapName = 1;
    {PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.mapname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 mapId = 2;
    {PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.mapid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .msg.g2c.MapType mapType = 3;
    {PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.maptype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\17\7\0\0\0\0\0\0"
    "msg.g2c.MapInfo"
    "mapName"
  }},
};

PROTOBUF_NOINLINE void MapInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.MapInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapname_.ClearToEmpty();
  ::memset(&_impl_.mapid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.maptype_) -
      reinterpret_cast<char*>(&_impl_.mapid_)) + sizeof(_impl_.maptype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MapInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* MapInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.MapInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string mapName = 1;
  if (!this->_internal_mapname().empty()) {
    const std::string& _s = this->_internal_mapname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msg.g2c.MapInfo.mapName");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 mapId = 2;
  if (this->_internal_mapid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_mapid(), target);
  }

  // .msg.g2c.MapType mapType = 3;
  if (this->_internal_maptype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_maptype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.MapInfo)
  return target;
}

::size_t MapInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.MapInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string mapName = 1;
  if (!this->_internal_mapname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mapname());
  }

  // uint32 mapId = 2;
  if (this->_internal_mapid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mapid());
  }

  // .msg.g2c.MapType mapType = 3;
  if (this->_internal_maptype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_maptype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MapInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapInfo*>(&to_msg);
  auto& from = static_cast<const MapInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.MapInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapname().empty()) {
    _this->_internal_set_mapname(from._internal_mapname());
  }
  if (from._internal_mapid() != 0) {
    _this->_impl_.mapid_ = from._impl_.mapid_;
  }
  if (from._internal_maptype() != 0) {
    _this->_impl_.maptype_ = from._impl_.maptype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapInfo::CopyFrom(const MapInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.MapInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MapInfo::IsInitialized() const {
  return true;
}

void MapInfo::InternalSwap(MapInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mapname_, &other->_impl_.mapname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.maptype_)
      + sizeof(MapInfo::_impl_.maptype_)
      - PROTOBUF_FIELD_OFFSET(MapInfo, _impl_.mapid_)>(
          reinterpret_cast<char*>(&_impl_.mapid_),
          reinterpret_cast<char*>(&other->_impl_.mapid_));
}

::google::protobuf::Metadata MapInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameGlobalInfo::_Internal {
 public:
};

GameGlobalInfo::GameGlobalInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.GameGlobalInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameGlobalInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mapinfo_{visibility, arena, from.mapinfo_},
        _cached_size_{0} {}

GameGlobalInfo::GameGlobalInfo(
    ::google::protobuf::Arena* arena,
    const GameGlobalInfo& from)
    : ::google::protobuf::Message(arena) {
  GameGlobalInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:msg.g2c.GameGlobalInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameGlobalInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mapinfo_{visibility, arena},
        _cached_size_{0} {}

inline void GameGlobalInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameGlobalInfo::~GameGlobalInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.GameGlobalInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameGlobalInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameGlobalInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameGlobalInfo, _impl_._cached_size_),
              false,
          },
          &GameGlobalInfo::MergeImpl,
          &GameGlobalInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GameGlobalInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameGlobalInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::GameGlobalInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msg.g2c.MapInfo mapInfo = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameGlobalInfo, _impl_.mapinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msg.g2c.MapInfo mapInfo = 1;
    {PROTOBUF_FIELD_OFFSET(GameGlobalInfo, _impl_.mapinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::MapInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameGlobalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.GameGlobalInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapinfo_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameGlobalInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GameGlobalInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.GameGlobalInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .msg.g2c.MapInfo mapInfo = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_mapinfo_size());
       i < n; i++) {
    const auto& repfield = this->_internal_mapinfo().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.GameGlobalInfo)
  return target;
}

::size_t GameGlobalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.GameGlobalInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.MapInfo mapInfo = 1;
  total_size += 1UL * this->_internal_mapinfo_size();
  for (const auto& msg : this->_internal_mapinfo()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameGlobalInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameGlobalInfo*>(&to_msg);
  auto& from = static_cast<const GameGlobalInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.GameGlobalInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mapinfo()->MergeFrom(
      from._internal_mapinfo());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameGlobalInfo::CopyFrom(const GameGlobalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.GameGlobalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameGlobalInfo::IsInitialized() const {
  return true;
}

void GameGlobalInfo::InternalSwap(GameGlobalInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mapinfo_.InternalSwap(&other->_impl_.mapinfo_);
}

::google::protobuf::Metadata GameGlobalInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemWayPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<ItemWayPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_._has_bits_);
};

ItemWayPoint::ItemWayPoint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.ItemWayPoint)
}
inline PROTOBUF_NDEBUG_INLINE ItemWayPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ItemWayPoint::ItemWayPoint(
    ::google::protobuf::Arena* arena,
    const ItemWayPoint& from)
    : ::google::protobuf::Message(arena) {
  ItemWayPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.normal_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.normal_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:msg.g2c.ItemWayPoint)
}
inline PROTOBUF_NDEBUG_INLINE ItemWayPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ItemWayPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, normal_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::normal_));
}
ItemWayPoint::~ItemWayPoint() {
  // @@protoc_insertion_point(destructor:msg.g2c.ItemWayPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ItemWayPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.normal_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ItemWayPoint::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_._cached_size_),
              false,
          },
          &ItemWayPoint::MergeImpl,
          &ItemWayPoint::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ItemWayPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ItemWayPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::ItemWayPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .msg.g2c.Vector3D normal = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.normal_)}},
    // .msg.g2c.Vector3D pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .msg.g2c.Vector3D pos = 1;
    {PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D normal = 2;
    {PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.normal_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ItemWayPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.ItemWayPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ItemWayPoint::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* ItemWayPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.ItemWayPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D normal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.normal_, _impl_.normal_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.ItemWayPoint)
  return target;
}

::size_t ItemWayPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.ItemWayPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .msg.g2c.Vector3D pos = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D normal = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.normal_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ItemWayPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemWayPoint*>(&to_msg);
  auto& from = static_cast<const ItemWayPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.ItemWayPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemWayPoint::CopyFrom(const ItemWayPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.ItemWayPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ItemWayPoint::IsInitialized() const {
  return true;
}

void ItemWayPoint::InternalSwap(ItemWayPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.normal_)
      + sizeof(ItemWayPoint::_impl_.normal_)
      - PROTOBUF_FIELD_OFFSET(ItemWayPoint, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata ItemWayPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapHeightInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<MapHeightInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_._has_bits_);
};

MapHeightInfo::MapHeightInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.MapHeightInfo)
}
inline PROTOBUF_NDEBUG_INLINE MapHeightInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        heightvalue_{visibility, arena, from.heightvalue_} {}

MapHeightInfo::MapHeightInfo(
    ::google::protobuf::Arena* arena,
    const MapHeightInfo& from)
    : ::google::protobuf::Message(arena) {
  MapHeightInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.originpos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.originpos_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, granularityheight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, granularityheight_),
           offsetof(Impl_, mapwidth_) -
               offsetof(Impl_, granularityheight_) +
               sizeof(Impl_::mapwidth_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.MapHeightInfo)
}
inline PROTOBUF_NDEBUG_INLINE MapHeightInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        heightvalue_{visibility, arena} {}

inline void MapHeightInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, originpos_),
           0,
           offsetof(Impl_, mapwidth_) -
               offsetof(Impl_, originpos_) +
               sizeof(Impl_::mapwidth_));
}
MapHeightInfo::~MapHeightInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.MapHeightInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MapHeightInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.originpos_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MapHeightInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_._cached_size_),
              false,
          },
          &MapHeightInfo::MergeImpl,
          &MapHeightInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> MapHeightInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MapHeightInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::MapHeightInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .msg.g2c.Vector3D originPos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.originpos_)}},
    // float granularityHeight = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.granularityheight_)}},
    // float granularityWidth = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.granularitywidth_)}},
    // float mapHeight = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.mapheight_)}},
    // float mapWidth = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.mapwidth_)}},
    // repeated float heightValue = 6;
    {::_pbi::TcParser::FastF32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.heightvalue_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .msg.g2c.Vector3D originPos = 1;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.originpos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float granularityHeight = 2;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.granularityheight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float granularityWidth = 3;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.granularitywidth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float mapHeight = 4;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.mapheight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float mapWidth = 5;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.mapwidth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // repeated float heightValue = 6;
    {PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.heightvalue_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MapHeightInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.MapHeightInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.heightvalue_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.originpos_ != nullptr);
    _impl_.originpos_->Clear();
  }
  ::memset(&_impl_.granularityheight_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mapwidth_) -
      reinterpret_cast<char*>(&_impl_.granularityheight_)) + sizeof(_impl_.mapwidth_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MapHeightInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* MapHeightInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.MapHeightInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D originPos = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.originpos_, _impl_.originpos_->GetCachedSize(), target, stream);
  }

  // float granularityHeight = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularityheight = this->_internal_granularityheight();
  ::uint32_t raw_granularityheight;
  memcpy(&raw_granularityheight, &tmp_granularityheight, sizeof(tmp_granularityheight));
  if (raw_granularityheight != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_granularityheight(), target);
  }

  // float granularityWidth = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularitywidth = this->_internal_granularitywidth();
  ::uint32_t raw_granularitywidth;
  memcpy(&raw_granularitywidth, &tmp_granularitywidth, sizeof(tmp_granularitywidth));
  if (raw_granularitywidth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_granularitywidth(), target);
  }

  // float mapHeight = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapheight = this->_internal_mapheight();
  ::uint32_t raw_mapheight;
  memcpy(&raw_mapheight, &tmp_mapheight, sizeof(tmp_mapheight));
  if (raw_mapheight != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_mapheight(), target);
  }

  // float mapWidth = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapwidth = this->_internal_mapwidth();
  ::uint32_t raw_mapwidth;
  memcpy(&raw_mapwidth, &tmp_mapwidth, sizeof(tmp_mapwidth));
  if (raw_mapwidth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_mapwidth(), target);
  }

  // repeated float heightValue = 6;
  if (this->_internal_heightvalue_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_heightvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.MapHeightInfo)
  return target;
}

::size_t MapHeightInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.MapHeightInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float heightValue = 6;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_heightvalue_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // .msg.g2c.Vector3D originPos = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.originpos_);
  }

  // float granularityHeight = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularityheight = this->_internal_granularityheight();
  ::uint32_t raw_granularityheight;
  memcpy(&raw_granularityheight, &tmp_granularityheight, sizeof(tmp_granularityheight));
  if (raw_granularityheight != 0) {
    total_size += 5;
  }

  // float granularityWidth = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularitywidth = this->_internal_granularitywidth();
  ::uint32_t raw_granularitywidth;
  memcpy(&raw_granularitywidth, &tmp_granularitywidth, sizeof(tmp_granularitywidth));
  if (raw_granularitywidth != 0) {
    total_size += 5;
  }

  // float mapHeight = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapheight = this->_internal_mapheight();
  ::uint32_t raw_mapheight;
  memcpy(&raw_mapheight, &tmp_mapheight, sizeof(tmp_mapheight));
  if (raw_mapheight != 0) {
    total_size += 5;
  }

  // float mapWidth = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapwidth = this->_internal_mapwidth();
  ::uint32_t raw_mapwidth;
  memcpy(&raw_mapwidth, &tmp_mapwidth, sizeof(tmp_mapwidth));
  if (raw_mapwidth != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MapHeightInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapHeightInfo*>(&to_msg);
  auto& from = static_cast<const MapHeightInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.MapHeightInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_heightvalue()->MergeFrom(from._internal_heightvalue());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.originpos_ != nullptr);
    if (_this->_impl_.originpos_ == nullptr) {
      _this->_impl_.originpos_ =
          ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.originpos_);
    } else {
      _this->_impl_.originpos_->MergeFrom(*from._impl_.originpos_);
    }
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularityheight = from._internal_granularityheight();
  ::uint32_t raw_granularityheight;
  memcpy(&raw_granularityheight, &tmp_granularityheight, sizeof(tmp_granularityheight));
  if (raw_granularityheight != 0) {
    _this->_impl_.granularityheight_ = from._impl_.granularityheight_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_granularitywidth = from._internal_granularitywidth();
  ::uint32_t raw_granularitywidth;
  memcpy(&raw_granularitywidth, &tmp_granularitywidth, sizeof(tmp_granularitywidth));
  if (raw_granularitywidth != 0) {
    _this->_impl_.granularitywidth_ = from._impl_.granularitywidth_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapheight = from._internal_mapheight();
  ::uint32_t raw_mapheight;
  memcpy(&raw_mapheight, &tmp_mapheight, sizeof(tmp_mapheight));
  if (raw_mapheight != 0) {
    _this->_impl_.mapheight_ = from._impl_.mapheight_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mapwidth = from._internal_mapwidth();
  ::uint32_t raw_mapwidth;
  memcpy(&raw_mapwidth, &tmp_mapwidth, sizeof(tmp_mapwidth));
  if (raw_mapwidth != 0) {
    _this->_impl_.mapwidth_ = from._impl_.mapwidth_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapHeightInfo::CopyFrom(const MapHeightInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.MapHeightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MapHeightInfo::IsInitialized() const {
  return true;
}

void MapHeightInfo::InternalSwap(MapHeightInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.heightvalue_.InternalSwap(&other->_impl_.heightvalue_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.mapwidth_)
      + sizeof(MapHeightInfo::_impl_.mapwidth_)
      - PROTOBUF_FIELD_OFFSET(MapHeightInfo, _impl_.originpos_)>(
          reinterpret_cast<char*>(&_impl_.originpos_),
          reinterpret_cast<char*>(&other->_impl_.originpos_));
}

::google::protobuf::Metadata MapHeightInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GamePointInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<GamePointInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_._has_bits_);
};

GamePointInfo::GamePointInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.GamePointInfo)
}
inline PROTOBUF_NDEBUG_INLINE GamePointInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GamePointInfo::GamePointInfo(
    ::google::protobuf::Arena* arena,
    const GamePointInfo& from)
    : ::google::protobuf::Message(arena) {
  GamePointInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.rot_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.rot_)
                        : nullptr;
  _impl_.size_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.size_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.GamePointInfo)
}
inline PROTOBUF_NDEBUG_INLINE GamePointInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GamePointInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::level_));
}
GamePointInfo::~GamePointInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.GamePointInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GamePointInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.rot_;
  delete _impl_.size_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GamePointInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_._cached_size_),
              false,
          },
          &GamePointInfo::MergeImpl,
          &GamePointInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> GamePointInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GamePointInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::GamePointInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GamePointInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.id_)}},
    // .msg.g2c.GamePointType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GamePointInfo, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.type_)}},
    // .msg.g2c.Vector3D pos = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.pos_)}},
    // .msg.g2c.Vector3D rot = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.rot_)}},
    // .msg.g2c.Vector3D size = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.size_)}},
    // uint32 level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GamePointInfo, _impl_.level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.level_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .msg.g2c.GamePointType type = 2;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.Vector3D pos = 3;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D rot = 4;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.rot_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D size = 5;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.size_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 level = 6;
    {PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GamePointInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.GamePointInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rot_ != nullptr);
      _impl_.rot_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GamePointInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GamePointInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.GamePointInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // .msg.g2c.GamePointType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D rot = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.rot_, _impl_.rot_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D size = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.size_, _impl_.size_->GetCachedSize(), target, stream);
  }

  // uint32 level = 6;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.GamePointInfo)
  return target;
}

::size_t GamePointInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.GamePointInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .msg.g2c.Vector3D pos = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D rot = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rot_);
    }

    // .msg.g2c.Vector3D size = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.size_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .msg.g2c.GamePointType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 level = 6;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GamePointInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GamePointInfo*>(&to_msg);
  auto& from = static_cast<const GamePointInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.GamePointInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rot_ != nullptr);
      if (_this->_impl_.rot_ == nullptr) {
        _this->_impl_.rot_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.rot_);
      } else {
        _this->_impl_.rot_->MergeFrom(*from._impl_.rot_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.size_ != nullptr);
      if (_this->_impl_.size_ == nullptr) {
        _this->_impl_.size_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.size_);
      } else {
        _this->_impl_.size_->MergeFrom(*from._impl_.size_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GamePointInfo::CopyFrom(const GamePointInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.GamePointInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GamePointInfo::IsInitialized() const {
  return true;
}

void GamePointInfo::InternalSwap(GamePointInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.level_)
      + sizeof(GamePointInfo::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(GamePointInfo, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata GamePointInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameInfo::_Internal {
 public:
};

GameInfo::GameInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.GameInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : gamepoints_{visibility, arena, from.gamepoints_},
        _cached_size_{0} {}

GameInfo::GameInfo(
    ::google::protobuf::Arena* arena,
    const GameInfo& from)
    : ::google::protobuf::Message(arena) {
  GameInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:msg.g2c.GameInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : gamepoints_{visibility, arena},
        _cached_size_{0} {}

inline void GameInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameInfo::~GameInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.GameInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameInfo, _impl_._cached_size_),
              false,
          },
          &GameInfo::MergeImpl,
          &GameInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GameInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::GameInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .msg.g2c.GamePointInfo gamePoints = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameInfo, _impl_.gamepoints_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .msg.g2c.GamePointInfo gamePoints = 1;
    {PROTOBUF_FIELD_OFFSET(GameInfo, _impl_.gamepoints_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::GamePointInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.GameInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gamepoints_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GameInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.GameInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .msg.g2c.GamePointInfo gamePoints = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_gamepoints_size());
       i < n; i++) {
    const auto& repfield = this->_internal_gamepoints().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.GameInfo)
  return target;
}

::size_t GameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.GameInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.GamePointInfo gamePoints = 1;
  total_size += 1UL * this->_internal_gamepoints_size();
  for (const auto& msg : this->_internal_gamepoints()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameInfo*>(&to_msg);
  auto& from = static_cast<const GameInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.GameInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gamepoints()->MergeFrom(
      from._internal_gamepoints());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameInfo::CopyFrom(const GameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.GameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameInfo::IsInitialized() const {
  return true;
}

void GameInfo::InternalSwap(GameInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.gamepoints_.InternalSwap(&other->_impl_.gamepoints_);
}

::google::protobuf::Metadata GameInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TargetPointInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<TargetPointInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_._has_bits_);
};

TargetPointInfo::TargetPointInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.TargetPointInfo)
}
inline PROTOBUF_NDEBUG_INLINE TargetPointInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TargetPointInfo::TargetPointInfo(
    ::google::protobuf::Arena* arena,
    const TargetPointInfo& from)
    : ::google::protobuf::Message(arena) {
  TargetPointInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.rot_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.rot_)
                        : nullptr;
  _impl_.size_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.size_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.TargetPointInfo)
}
inline PROTOBUF_NDEBUG_INLINE TargetPointInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TargetPointInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::level_));
}
TargetPointInfo::~TargetPointInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.TargetPointInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TargetPointInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.rot_;
  delete _impl_.size_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TargetPointInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_._cached_size_),
              false,
          },
          &TargetPointInfo::MergeImpl,
          &TargetPointInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> TargetPointInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TargetPointInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::TargetPointInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TargetPointInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.id_)}},
    // bool isDestination = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TargetPointInfo, _impl_.isdestination_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.isdestination_)}},
    // .msg.g2c.Vector3D pos = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.pos_)}},
    // .msg.g2c.Vector3D rot = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.rot_)}},
    // .msg.g2c.Vector3D size = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.size_)}},
    // uint32 level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TargetPointInfo, _impl_.level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.level_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool isDestination = 2;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.isdestination_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .msg.g2c.Vector3D pos = 3;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D rot = 4;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.rot_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D size = 5;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.size_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 level = 6;
    {PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TargetPointInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.TargetPointInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rot_ != nullptr);
      _impl_.rot_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TargetPointInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* TargetPointInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.TargetPointInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // bool isDestination = 2;
  if (this->_internal_isdestination() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_isdestination(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D rot = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.rot_, _impl_.rot_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D size = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.size_, _impl_.size_->GetCachedSize(), target, stream);
  }

  // uint32 level = 6;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.TargetPointInfo)
  return target;
}

::size_t TargetPointInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.TargetPointInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .msg.g2c.Vector3D pos = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D rot = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rot_);
    }

    // .msg.g2c.Vector3D size = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.size_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // bool isDestination = 2;
  if (this->_internal_isdestination() != 0) {
    total_size += 2;
  }

  // uint32 level = 6;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TargetPointInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TargetPointInfo*>(&to_msg);
  auto& from = static_cast<const TargetPointInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.TargetPointInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rot_ != nullptr);
      if (_this->_impl_.rot_ == nullptr) {
        _this->_impl_.rot_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.rot_);
      } else {
        _this->_impl_.rot_->MergeFrom(*from._impl_.rot_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.size_ != nullptr);
      if (_this->_impl_.size_ == nullptr) {
        _this->_impl_.size_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.size_);
      } else {
        _this->_impl_.size_->MergeFrom(*from._impl_.size_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_isdestination() != 0) {
    _this->_impl_.isdestination_ = from._impl_.isdestination_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TargetPointInfo::CopyFrom(const TargetPointInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.TargetPointInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TargetPointInfo::IsInitialized() const {
  return true;
}

void TargetPointInfo::InternalSwap(TargetPointInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.level_)
      + sizeof(TargetPointInfo::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(TargetPointInfo, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata TargetPointInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameState::_Internal {
 public:
};

GameState::GameState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : targetpointsinfo_{visibility, arena, from.targetpointsinfo_},
        _cached_size_{0} {}

GameState::GameState(
    ::google::protobuf::Arena* arena,
    const GameState& from)
    : ::google::protobuf::Message(arena) {
  GameState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, isgameend_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::isgameend_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : targetpointsinfo_{visibility, arena},
        _cached_size_{0} {}

inline void GameState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, isgameend_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::isgameend_));
}
GameState::~GameState() {
  // @@protoc_insertion_point(destructor:msg.g2c.GameState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameState, _impl_._cached_size_),
              false,
          },
          &GameState::MergeImpl,
          &GameState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> GameState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::GameState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameState, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.timestamp_)}},
    // float timeLeft = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.timeleft_)}},
    // uint32 mapId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameState, _impl_.mapid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.mapid_)}},
    // bool isGameEnd = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameState, _impl_.isgameend_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.isgameend_)}},
    // repeated .msg.g2c.TargetPointInfo targetPointsInfo = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.targetpointsinfo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // float timeLeft = 2;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.timeleft_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 mapId = 3;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.mapid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool isGameEnd = 4;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.isgameend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .msg.g2c.TargetPointInfo targetPointsInfo = 5;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.targetpointsinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::TargetPointInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.GameState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetpointsinfo_.Clear();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.isgameend_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.isgameend_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GameState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.GameState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // float timeLeft = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timeleft = this->_internal_timeleft();
  ::uint32_t raw_timeleft;
  memcpy(&raw_timeleft, &tmp_timeleft, sizeof(tmp_timeleft));
  if (raw_timeleft != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_timeleft(), target);
  }

  // uint32 mapId = 3;
  if (this->_internal_mapid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_mapid(), target);
  }

  // bool isGameEnd = 4;
  if (this->_internal_isgameend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_isgameend(), target);
  }

  // repeated .msg.g2c.TargetPointInfo targetPointsInfo = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_targetpointsinfo_size());
       i < n; i++) {
    const auto& repfield = this->_internal_targetpointsinfo().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.GameState)
  return target;
}

::size_t GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.GameState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.TargetPointInfo targetPointsInfo = 5;
  total_size += 1UL * this->_internal_targetpointsinfo_size();
  for (const auto& msg : this->_internal_targetpointsinfo()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // float timeLeft = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timeleft = this->_internal_timeleft();
  ::uint32_t raw_timeleft;
  memcpy(&raw_timeleft, &tmp_timeleft, sizeof(tmp_timeleft));
  if (raw_timeleft != 0) {
    total_size += 5;
  }

  // uint32 mapId = 3;
  if (this->_internal_mapid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mapid());
  }

  // bool isGameEnd = 4;
  if (this->_internal_isgameend() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameState*>(&to_msg);
  auto& from = static_cast<const GameState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.GameState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_targetpointsinfo()->MergeFrom(
      from._internal_targetpointsinfo());
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timeleft = from._internal_timeleft();
  ::uint32_t raw_timeleft;
  memcpy(&raw_timeleft, &tmp_timeleft, sizeof(tmp_timeleft));
  if (raw_timeleft != 0) {
    _this->_impl_.timeleft_ = from._impl_.timeleft_;
  }
  if (from._internal_mapid() != 0) {
    _this->_impl_.mapid_ = from._impl_.mapid_;
  }
  if (from._internal_isgameend() != 0) {
    _this->_impl_.isgameend_ = from._impl_.isgameend_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameState::IsInitialized() const {
  return true;
}

void GameState::InternalSwap(GameState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.targetpointsinfo_.InternalSwap(&other->_impl_.targetpointsinfo_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameState, _impl_.isgameend_)
      + sizeof(GameState::_impl_.isgameend_)
      - PROTOBUF_FIELD_OFFSET(GameState, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata GameState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentPropState::_Internal {
 public:
};

AgentPropState::AgentPropState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.AgentPropState)
}
AgentPropState::AgentPropState(
    ::google::protobuf::Arena* arena, const AgentPropState& from)
    : AgentPropState(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AgentPropState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AgentPropState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, durable_),
           0,
           offsetof(Impl_, playerpropusetype_) -
               offsetof(Impl_, durable_) +
               sizeof(Impl_::playerpropusetype_));
}
AgentPropState::~AgentPropState() {
  // @@protoc_insertion_point(destructor:msg.g2c.AgentPropState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AgentPropState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AgentPropState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_._cached_size_),
              false,
          },
          &AgentPropState::MergeImpl,
          &AgentPropState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> AgentPropState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AgentPropState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::AgentPropState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .msg.g2c.PropUseType playerPropUseType = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.playerpropusetype_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.playerpropusetype_)}},
    // uint32 durable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.durable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.durable_)}},
    // uint32 useCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.usecount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.usecount_)}},
    // uint32 cd = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.cd_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.cd_)}},
    // uint32 curCD = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.curcd_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.curcd_)}},
    // bool inCD = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AgentPropState, _impl_.incd_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.incd_)}},
    // .msg.g2c.PropFuncType propFuncType = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.propfunctype_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.propfunctype_)}},
    // uint32 delayedDestroy = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentPropState, _impl_.delayeddestroy_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.delayeddestroy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 durable = 1;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.durable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 useCount = 2;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.usecount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cd = 3;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.cd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 curCD = 4;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.curcd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool inCD = 5;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.incd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .msg.g2c.PropFuncType propFuncType = 6;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.propfunctype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 delayedDestroy = 7;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.delayeddestroy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .msg.g2c.PropUseType playerPropUseType = 8;
    {PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.playerpropusetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AgentPropState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.AgentPropState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.durable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.playerpropusetype_) -
      reinterpret_cast<char*>(&_impl_.durable_)) + sizeof(_impl_.playerpropusetype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AgentPropState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* AgentPropState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.AgentPropState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 durable = 1;
  if (this->_internal_durable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_durable(), target);
  }

  // uint32 useCount = 2;
  if (this->_internal_usecount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_usecount(), target);
  }

  // uint32 cd = 3;
  if (this->_internal_cd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_cd(), target);
  }

  // uint32 curCD = 4;
  if (this->_internal_curcd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_curcd(), target);
  }

  // bool inCD = 5;
  if (this->_internal_incd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_incd(), target);
  }

  // .msg.g2c.PropFuncType propFuncType = 6;
  if (this->_internal_propfunctype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_propfunctype(), target);
  }

  // uint32 delayedDestroy = 7;
  if (this->_internal_delayeddestroy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_delayeddestroy(), target);
  }

  // .msg.g2c.PropUseType playerPropUseType = 8;
  if (this->_internal_playerpropusetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_playerpropusetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.AgentPropState)
  return target;
}

::size_t AgentPropState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.AgentPropState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 durable = 1;
  if (this->_internal_durable() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_durable());
  }

  // uint32 useCount = 2;
  if (this->_internal_usecount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_usecount());
  }

  // uint32 cd = 3;
  if (this->_internal_cd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cd());
  }

  // uint32 curCD = 4;
  if (this->_internal_curcd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_curcd());
  }

  // bool inCD = 5;
  if (this->_internal_incd() != 0) {
    total_size += 2;
  }

  // .msg.g2c.PropFuncType propFuncType = 6;
  if (this->_internal_propfunctype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_propfunctype());
  }

  // uint32 delayedDestroy = 7;
  if (this->_internal_delayeddestroy() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_delayeddestroy());
  }

  // .msg.g2c.PropUseType playerPropUseType = 8;
  if (this->_internal_playerpropusetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_playerpropusetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AgentPropState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentPropState*>(&to_msg);
  auto& from = static_cast<const AgentPropState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.AgentPropState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durable() != 0) {
    _this->_impl_.durable_ = from._impl_.durable_;
  }
  if (from._internal_usecount() != 0) {
    _this->_impl_.usecount_ = from._impl_.usecount_;
  }
  if (from._internal_cd() != 0) {
    _this->_impl_.cd_ = from._impl_.cd_;
  }
  if (from._internal_curcd() != 0) {
    _this->_impl_.curcd_ = from._impl_.curcd_;
  }
  if (from._internal_incd() != 0) {
    _this->_impl_.incd_ = from._impl_.incd_;
  }
  if (from._internal_propfunctype() != 0) {
    _this->_impl_.propfunctype_ = from._impl_.propfunctype_;
  }
  if (from._internal_delayeddestroy() != 0) {
    _this->_impl_.delayeddestroy_ = from._impl_.delayeddestroy_;
  }
  if (from._internal_playerpropusetype() != 0) {
    _this->_impl_.playerpropusetype_ = from._impl_.playerpropusetype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentPropState::CopyFrom(const AgentPropState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.AgentPropState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AgentPropState::IsInitialized() const {
  return true;
}

void AgentPropState::InternalSwap(AgentPropState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.playerpropusetype_)
      + sizeof(AgentPropState::_impl_.playerpropusetype_)
      - PROTOBUF_FIELD_OFFSET(AgentPropState, _impl_.durable_)>(
          reinterpret_cast<char*>(&_impl_.durable_),
          reinterpret_cast<char*>(&other->_impl_.durable_));
}

::google::protobuf::Metadata AgentPropState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentState::_Internal {
 public:
  using HasBits = decltype(std::declval<AgentState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AgentState, _impl_._has_bits_);
};

AgentState::AgentState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.AgentState)
}
inline PROTOBUF_NDEBUG_INLINE AgentState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        passtargetpoint_{visibility, arena, from.passtargetpoint_},
        _passtargetpoint_cached_byte_size_{0} {}

AgentState::AgentState(
    ::google::protobuf::Arena* arena,
    const AgentState& from)
    : ::google::protobuf::Message(arena) {
  AgentState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.rot_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.rot_)
                        : nullptr;
  _impl_.vel_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.vel_)
                        : nullptr;
  _impl_.agentprop_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::AgentPropState>(
                              arena, *from._impl_.agentprop_)
                        : nullptr;
  _impl_.forward_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.forward_)
                        : nullptr;
  _impl_.right_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.right_)
                        : nullptr;
  _impl_.up_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.up_)
                        : nullptr;
  _impl_.goalpoint_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.goalpoint_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, maxhp_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::maxhp_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.AgentState)
}
inline PROTOBUF_NDEBUG_INLINE AgentState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        passtargetpoint_{visibility, arena},
        _passtargetpoint_cached_byte_size_{0} {}

inline void AgentState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, maxhp_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::maxhp_));
}
AgentState::~AgentState() {
  // @@protoc_insertion_point(destructor:msg.g2c.AgentState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AgentState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.rot_;
  delete _impl_.vel_;
  delete _impl_.agentprop_;
  delete _impl_.forward_;
  delete _impl_.right_;
  delete _impl_.up_;
  delete _impl_.goalpoint_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AgentState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AgentState, _impl_._cached_size_),
              false,
          },
          &AgentState::MergeImpl,
          &AgentState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 8, 0, 2> AgentState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AgentState, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AgentState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::AgentState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float maxHP = 16;
    {::_pbi::TcParser::FastF32S2,
     {389, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.maxhp_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AgentState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.id_)}},
    // .msg.g2c.Vector3D pos = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.pos_)}},
    // .msg.g2c.Vector3D rot = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.rot_)}},
    // .msg.g2c.Vector3D vel = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.vel_)}},
    // .msg.g2c.AnimationStateType animationState = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentState, _impl_.animationstate_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.animationstate_)}},
    // .msg.g2c.AgentPropState agentProp = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.agentprop_)}},
    // bool doNotCtrl = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AgentState, _impl_.donotctrl_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.donotctrl_)}},
    // .msg.g2c.EndGameType endGameState = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AgentState, _impl_.endgamestate_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.endgamestate_)}},
    // .msg.g2c.Vector3D forward = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.forward_)}},
    // .msg.g2c.Vector3D right = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.right_)}},
    // .msg.g2c.Vector3D up = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 6, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.up_)}},
    // repeated uint32 passTargetPoint = 12;
    {::_pbi::TcParser::FastV32P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.passtargetpoint_)}},
    // .msg.g2c.Vector3D goalPoint = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 7, 7, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.goalpoint_)}},
    // bool Invincible = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AgentState, _impl_.invincible_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.invincible_)}},
    // float curHP = 15;
    {::_pbi::TcParser::FastF32S1,
     {125, 63, 0, PROTOBUF_FIELD_OFFSET(AgentState, _impl_.curhp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .msg.g2c.Vector3D pos = 2;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D rot = 3;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.rot_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D vel = 4;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.vel_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.AnimationStateType animationState = 5;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.animationstate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.AgentPropState agentProp = 6;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.agentprop_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool doNotCtrl = 7;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.donotctrl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .msg.g2c.EndGameType endGameState = 8;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.endgamestate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.Vector3D forward = 9;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.forward_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D right = 10;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.right_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D up = 11;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.up_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 passTargetPoint = 12;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.passtargetpoint_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // .msg.g2c.Vector3D goalPoint = 13;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.goalpoint_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool Invincible = 14;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.invincible_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float curHP = 15;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.curhp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float maxHP = 16;
    {PROTOBUF_FIELD_OFFSET(AgentState, _impl_.maxhp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::AgentPropState>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AgentState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.AgentState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.passtargetpoint_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rot_ != nullptr);
      _impl_.rot_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.vel_ != nullptr);
      _impl_.vel_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.agentprop_ != nullptr);
      _impl_.agentprop_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.forward_ != nullptr);
      _impl_.forward_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.right_ != nullptr);
      _impl_.right_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.up_ != nullptr);
      _impl_.up_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.goalpoint_ != nullptr);
      _impl_.goalpoint_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.maxhp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.maxhp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AgentState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* AgentState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.AgentState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D rot = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.rot_, _impl_.rot_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D vel = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.vel_, _impl_.vel_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.AnimationStateType animationState = 5;
  if (this->_internal_animationstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_animationstate(), target);
  }

  // .msg.g2c.AgentPropState agentProp = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.agentprop_, _impl_.agentprop_->GetCachedSize(), target, stream);
  }

  // bool doNotCtrl = 7;
  if (this->_internal_donotctrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_donotctrl(), target);
  }

  // .msg.g2c.EndGameType endGameState = 8;
  if (this->_internal_endgamestate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_endgamestate(), target);
  }

  // .msg.g2c.Vector3D forward = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *_impl_.forward_, _impl_.forward_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D right = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.right_, _impl_.right_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D up = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *_impl_.up_, _impl_.up_->GetCachedSize(), target, stream);
  }

  // repeated uint32 passTargetPoint = 12;
  {
    int byte_size = _impl_._passtargetpoint_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          12, _internal_passtargetpoint(), byte_size, target);
    }
  }

  // .msg.g2c.Vector3D goalPoint = 13;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *_impl_.goalpoint_, _impl_.goalpoint_->GetCachedSize(), target, stream);
  }

  // bool Invincible = 14;
  if (this->_internal_invincible() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_invincible(), target);
  }

  // float curHP = 15;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_curhp = this->_internal_curhp();
  ::uint32_t raw_curhp;
  memcpy(&raw_curhp, &tmp_curhp, sizeof(tmp_curhp));
  if (raw_curhp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        15, this->_internal_curhp(), target);
  }

  // float maxHP = 16;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_maxhp = this->_internal_maxhp();
  ::uint32_t raw_maxhp;
  memcpy(&raw_maxhp, &tmp_maxhp, sizeof(tmp_maxhp));
  if (raw_maxhp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        16, this->_internal_maxhp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.AgentState)
  return target;
}

::size_t AgentState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.AgentState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint32 passTargetPoint = 12;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_passtargetpoint())
    ;
    _impl_._passtargetpoint_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .msg.g2c.Vector3D pos = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D rot = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rot_);
    }

    // .msg.g2c.Vector3D vel = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vel_);
    }

    // .msg.g2c.AgentPropState agentProp = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.agentprop_);
    }

    // .msg.g2c.Vector3D forward = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.forward_);
    }

    // .msg.g2c.Vector3D right = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.right_);
    }

    // .msg.g2c.Vector3D up = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.up_);
    }

    // .msg.g2c.Vector3D goalPoint = 13;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.goalpoint_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .msg.g2c.AnimationStateType animationState = 5;
  if (this->_internal_animationstate() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_animationstate());
  }

  // .msg.g2c.EndGameType endGameState = 8;
  if (this->_internal_endgamestate() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_endgamestate());
  }

  // bool doNotCtrl = 7;
  if (this->_internal_donotctrl() != 0) {
    total_size += 2;
  }

  // bool Invincible = 14;
  if (this->_internal_invincible() != 0) {
    total_size += 2;
  }

  // float curHP = 15;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_curhp = this->_internal_curhp();
  ::uint32_t raw_curhp;
  memcpy(&raw_curhp, &tmp_curhp, sizeof(tmp_curhp));
  if (raw_curhp != 0) {
    total_size += 5;
  }

  // float maxHP = 16;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_maxhp = this->_internal_maxhp();
  ::uint32_t raw_maxhp;
  memcpy(&raw_maxhp, &tmp_maxhp, sizeof(tmp_maxhp));
  if (raw_maxhp != 0) {
    total_size += 6;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AgentState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentState*>(&to_msg);
  auto& from = static_cast<const AgentState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.AgentState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_passtargetpoint()->MergeFrom(from._internal_passtargetpoint());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rot_ != nullptr);
      if (_this->_impl_.rot_ == nullptr) {
        _this->_impl_.rot_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.rot_);
      } else {
        _this->_impl_.rot_->MergeFrom(*from._impl_.rot_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.vel_ != nullptr);
      if (_this->_impl_.vel_ == nullptr) {
        _this->_impl_.vel_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.vel_);
      } else {
        _this->_impl_.vel_->MergeFrom(*from._impl_.vel_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.agentprop_ != nullptr);
      if (_this->_impl_.agentprop_ == nullptr) {
        _this->_impl_.agentprop_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::AgentPropState>(arena, *from._impl_.agentprop_);
      } else {
        _this->_impl_.agentprop_->MergeFrom(*from._impl_.agentprop_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.forward_ != nullptr);
      if (_this->_impl_.forward_ == nullptr) {
        _this->_impl_.forward_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.forward_);
      } else {
        _this->_impl_.forward_->MergeFrom(*from._impl_.forward_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.right_ != nullptr);
      if (_this->_impl_.right_ == nullptr) {
        _this->_impl_.right_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.right_);
      } else {
        _this->_impl_.right_->MergeFrom(*from._impl_.right_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.up_ != nullptr);
      if (_this->_impl_.up_ == nullptr) {
        _this->_impl_.up_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.up_);
      } else {
        _this->_impl_.up_->MergeFrom(*from._impl_.up_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.goalpoint_ != nullptr);
      if (_this->_impl_.goalpoint_ == nullptr) {
        _this->_impl_.goalpoint_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.goalpoint_);
      } else {
        _this->_impl_.goalpoint_->MergeFrom(*from._impl_.goalpoint_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_animationstate() != 0) {
    _this->_impl_.animationstate_ = from._impl_.animationstate_;
  }
  if (from._internal_endgamestate() != 0) {
    _this->_impl_.endgamestate_ = from._impl_.endgamestate_;
  }
  if (from._internal_donotctrl() != 0) {
    _this->_impl_.donotctrl_ = from._impl_.donotctrl_;
  }
  if (from._internal_invincible() != 0) {
    _this->_impl_.invincible_ = from._impl_.invincible_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_curhp = from._internal_curhp();
  ::uint32_t raw_curhp;
  memcpy(&raw_curhp, &tmp_curhp, sizeof(tmp_curhp));
  if (raw_curhp != 0) {
    _this->_impl_.curhp_ = from._impl_.curhp_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_maxhp = from._internal_maxhp();
  ::uint32_t raw_maxhp;
  memcpy(&raw_maxhp, &tmp_maxhp, sizeof(tmp_maxhp));
  if (raw_maxhp != 0) {
    _this->_impl_.maxhp_ = from._impl_.maxhp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentState::CopyFrom(const AgentState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.AgentState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AgentState::IsInitialized() const {
  return true;
}

void AgentState::InternalSwap(AgentState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.passtargetpoint_.InternalSwap(&other->_impl_.passtargetpoint_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentState, _impl_.maxhp_)
      + sizeof(AgentState::_impl_.maxhp_)
      - PROTOBUF_FIELD_OFFSET(AgentState, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata AgentState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemState::_Internal {
 public:
  using HasBits = decltype(std::declval<ItemState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ItemState, _impl_._has_bits_);
};

ItemState::ItemState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.ItemState)
}
inline PROTOBUF_NDEBUG_INLINE ItemState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        waypoints_{visibility, arena, from.waypoints_},
        itemfuncdata_(arena, from.itemfuncdata_) {}

ItemState::ItemState(
    ::google::protobuf::Arena* arena,
    const ItemState& from)
    : ::google::protobuf::Message(arena) {
  ItemState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.rot_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.rot_)
                        : nullptr;
  _impl_.size_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.size_)
                        : nullptr;
  _impl_.velocity_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.velocity_)
                        : nullptr;
  _impl_.angularvelocity_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.angularvelocity_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, propitemlevel_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::propitemlevel_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.ItemState)
}
inline PROTOBUF_NDEBUG_INLINE ItemState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        waypoints_{visibility, arena},
        itemfuncdata_(arena) {}

inline void ItemState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, propitemlevel_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::propitemlevel_));
}
ItemState::~ItemState() {
  // @@protoc_insertion_point(destructor:msg.g2c.ItemState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ItemState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.itemfuncdata_.Destroy();
  delete _impl_.pos_;
  delete _impl_.rot_;
  delete _impl_.size_;
  delete _impl_.velocity_;
  delete _impl_.angularvelocity_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ItemState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ItemState, _impl_._cached_size_),
              false,
          },
          &ItemState::MergeImpl,
          &ItemState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 6, 46, 2> ItemState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemState, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ItemState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::ItemState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ItemState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.id_)}},
    // .msg.g2c.Vector3D pos = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.pos_)}},
    // .msg.g2c.Vector3D rot = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.rot_)}},
    // .msg.g2c.Vector3D size = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.size_)}},
    // .msg.g2c.ShapeType shapeType = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemState, _impl_.shapetype_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.shapetype_)}},
    // .msg.g2c.ItemFuncType funcType = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemState, _impl_.functype_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.functype_)}},
    // .msg.g2c.Vector3D velocity = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.velocity_)}},
    // .msg.g2c.Vector3D angularVelocity = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.angularvelocity_)}},
    // string itemFuncData = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.itemfuncdata_)}},
    // repeated .msg.g2c.ItemWayPoint wayPoints = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 5, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.waypoints_)}},
    // uint32 itemTemplateId = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemState, _impl_.itemtemplateid_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.itemtemplateid_)}},
    // uint64 createByProp = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ItemState, _impl_.createbyprop_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.createbyprop_)}},
    // uint32 propItemLevel = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemState, _impl_.propitemlevel_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(ItemState, _impl_.propitemlevel_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .msg.g2c.Vector3D pos = 2;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D rot = 3;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.rot_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D size = 4;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.size_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.ShapeType shapeType = 5;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.shapetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.ItemFuncType funcType = 6;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.functype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.Vector3D velocity = 7;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.velocity_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D angularVelocity = 8;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.angularvelocity_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string itemFuncData = 9;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.itemfuncdata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .msg.g2c.ItemWayPoint wayPoints = 10;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.waypoints_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 itemTemplateId = 11;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.itemtemplateid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 createByProp = 12;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.createbyprop_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 propItemLevel = 13;
    {PROTOBUF_FIELD_OFFSET(ItemState, _impl_.propitemlevel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::ItemWayPoint>()},
  }}, {{
    "\21\0\0\0\0\0\0\0\0\14\0\0\0\0\0\0"
    "msg.g2c.ItemState"
    "itemFuncData"
  }},
};

PROTOBUF_NOINLINE void ItemState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.ItemState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.waypoints_.Clear();
  _impl_.itemfuncdata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rot_ != nullptr);
      _impl_.rot_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.angularvelocity_ != nullptr);
      _impl_.angularvelocity_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.propitemlevel_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.propitemlevel_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ItemState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* ItemState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.ItemState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D rot = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.rot_, _impl_.rot_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D size = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.size_, _impl_.size_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.ShapeType shapeType = 5;
  if (this->_internal_shapetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_shapetype(), target);
  }

  // .msg.g2c.ItemFuncType funcType = 6;
  if (this->_internal_functype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_functype(), target);
  }

  // .msg.g2c.Vector3D velocity = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.velocity_, _impl_.velocity_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D angularVelocity = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.angularvelocity_, _impl_.angularvelocity_->GetCachedSize(), target, stream);
  }

  // string itemFuncData = 9;
  if (!this->_internal_itemfuncdata().empty()) {
    const std::string& _s = this->_internal_itemfuncdata();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msg.g2c.ItemState.itemFuncData");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // repeated .msg.g2c.ItemWayPoint wayPoints = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_waypoints_size());
       i < n; i++) {
    const auto& repfield = this->_internal_waypoints().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint32 itemTemplateId = 11;
  if (this->_internal_itemtemplateid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_itemtemplateid(), target);
  }

  // uint64 createByProp = 12;
  if (this->_internal_createbyprop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        12, this->_internal_createbyprop(), target);
  }

  // uint32 propItemLevel = 13;
  if (this->_internal_propitemlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_propitemlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.ItemState)
  return target;
}

::size_t ItemState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.ItemState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.ItemWayPoint wayPoints = 10;
  total_size += 1UL * this->_internal_waypoints_size();
  for (const auto& msg : this->_internal_waypoints()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string itemFuncData = 9;
  if (!this->_internal_itemfuncdata().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_itemfuncdata());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // .msg.g2c.Vector3D pos = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D rot = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rot_);
    }

    // .msg.g2c.Vector3D size = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.size_);
    }

    // .msg.g2c.Vector3D velocity = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_);
    }

    // .msg.g2c.Vector3D angularVelocity = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.angularvelocity_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .msg.g2c.ShapeType shapeType = 5;
  if (this->_internal_shapetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_shapetype());
  }

  // .msg.g2c.ItemFuncType funcType = 6;
  if (this->_internal_functype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_functype());
  }

  // uint64 createByProp = 12;
  if (this->_internal_createbyprop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_createbyprop());
  }

  // uint32 itemTemplateId = 11;
  if (this->_internal_itemtemplateid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_itemtemplateid());
  }

  // uint32 propItemLevel = 13;
  if (this->_internal_propitemlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_propitemlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ItemState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemState*>(&to_msg);
  auto& from = static_cast<const ItemState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.ItemState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_waypoints()->MergeFrom(
      from._internal_waypoints());
  if (!from._internal_itemfuncdata().empty()) {
    _this->_internal_set_itemfuncdata(from._internal_itemfuncdata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rot_ != nullptr);
      if (_this->_impl_.rot_ == nullptr) {
        _this->_impl_.rot_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.rot_);
      } else {
        _this->_impl_.rot_->MergeFrom(*from._impl_.rot_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.size_ != nullptr);
      if (_this->_impl_.size_ == nullptr) {
        _this->_impl_.size_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.size_);
      } else {
        _this->_impl_.size_->MergeFrom(*from._impl_.size_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.angularvelocity_ != nullptr);
      if (_this->_impl_.angularvelocity_ == nullptr) {
        _this->_impl_.angularvelocity_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.angularvelocity_);
      } else {
        _this->_impl_.angularvelocity_->MergeFrom(*from._impl_.angularvelocity_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_shapetype() != 0) {
    _this->_impl_.shapetype_ = from._impl_.shapetype_;
  }
  if (from._internal_functype() != 0) {
    _this->_impl_.functype_ = from._impl_.functype_;
  }
  if (from._internal_createbyprop() != 0) {
    _this->_impl_.createbyprop_ = from._impl_.createbyprop_;
  }
  if (from._internal_itemtemplateid() != 0) {
    _this->_impl_.itemtemplateid_ = from._impl_.itemtemplateid_;
  }
  if (from._internal_propitemlevel() != 0) {
    _this->_impl_.propitemlevel_ = from._impl_.propitemlevel_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemState::CopyFrom(const ItemState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.ItemState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ItemState::IsInitialized() const {
  return true;
}

void ItemState::InternalSwap(ItemState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.waypoints_.InternalSwap(&other->_impl_.waypoints_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.itemfuncdata_, &other->_impl_.itemfuncdata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemState, _impl_.propitemlevel_)
      + sizeof(ItemState::_impl_.propitemlevel_)
      - PROTOBUF_FIELD_OFFSET(ItemState, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata ItemState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PropState::_Internal {
 public:
  using HasBits = decltype(std::declval<PropState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PropState, _impl_._has_bits_);
};

PropState::PropState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.PropState)
}
inline PROTOBUF_NDEBUG_INLINE PropState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PropState::PropState(
    ::google::protobuf::Arena* arena,
    const PropState& from)
    : ::google::protobuf::Message(arena) {
  PropState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.rot_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.rot_)
                        : nullptr;
  _impl_.size_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.size_)
                        : nullptr;
  _impl_.speed_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(
                              arena, *from._impl_.speed_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, delayeddestroy_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::delayeddestroy_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.PropState)
}
inline PROTOBUF_NDEBUG_INLINE PropState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PropState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, delayeddestroy_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::delayeddestroy_));
}
PropState::~PropState() {
  // @@protoc_insertion_point(destructor:msg.g2c.PropState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PropState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pos_;
  delete _impl_.rot_;
  delete _impl_.size_;
  delete _impl_.speed_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PropState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PropState, _impl_._cached_size_),
              false,
          },
          &PropState::MergeImpl,
          &PropState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 4, 0, 2> PropState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PropState, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PropState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::PropState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PropState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.id_)}},
    // .msg.g2c.Vector3D pos = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.pos_)}},
    // .msg.g2c.Vector3D rot = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(PropState, _impl_.rot_)}},
    // .msg.g2c.Vector3D size = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(PropState, _impl_.size_)}},
    // .msg.g2c.PropFuncType propFuncType = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropState, _impl_.propfunctype_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.propfunctype_)}},
    // .msg.g2c.PropUseType useType = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropState, _impl_.usetype_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.usetype_)}},
    // uint32 durable = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropState, _impl_.durable_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.durable_)}},
    // uint32 cd = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropState, _impl_.cd_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.cd_)}},
    // uint32 delayedDestroy = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropState, _impl_.delayeddestroy_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(PropState, _impl_.delayeddestroy_)}},
    // .msg.g2c.Vector3D speed = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 3, PROTOBUF_FIELD_OFFSET(PropState, _impl_.speed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .msg.g2c.Vector3D pos = 2;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D rot = 3;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.rot_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.Vector3D size = 4;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.size_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.PropFuncType propFuncType = 5;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.propfunctype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.PropUseType useType = 6;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.usetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 durable = 7;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.durable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cd = 8;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.cd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 delayedDestroy = 9;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.delayeddestroy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .msg.g2c.Vector3D speed = 10;
    {PROTOBUF_FIELD_OFFSET(PropState, _impl_.speed_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PropState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.PropState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rot_ != nullptr);
      _impl_.rot_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.speed_ != nullptr);
      _impl_.speed_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.delayeddestroy_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.delayeddestroy_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PropState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* PropState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.PropState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.Vector3D pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.pos_, _impl_.pos_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D rot = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.rot_, _impl_.rot_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.Vector3D size = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.size_, _impl_.size_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.PropFuncType propFuncType = 5;
  if (this->_internal_propfunctype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_propfunctype(), target);
  }

  // .msg.g2c.PropUseType useType = 6;
  if (this->_internal_usetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_usetype(), target);
  }

  // uint32 durable = 7;
  if (this->_internal_durable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_durable(), target);
  }

  // uint32 cd = 8;
  if (this->_internal_cd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_cd(), target);
  }

  // uint32 delayedDestroy = 9;
  if (this->_internal_delayeddestroy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_delayeddestroy(), target);
  }

  // .msg.g2c.Vector3D speed = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.speed_, _impl_.speed_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.PropState)
  return target;
}

::size_t PropState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.PropState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .msg.g2c.Vector3D pos = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pos_);
    }

    // .msg.g2c.Vector3D rot = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rot_);
    }

    // .msg.g2c.Vector3D size = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.size_);
    }

    // .msg.g2c.Vector3D speed = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_);
    }

  }
  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .msg.g2c.PropFuncType propFuncType = 5;
  if (this->_internal_propfunctype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_propfunctype());
  }

  // .msg.g2c.PropUseType useType = 6;
  if (this->_internal_usetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_usetype());
  }

  // uint32 durable = 7;
  if (this->_internal_durable() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_durable());
  }

  // uint32 cd = 8;
  if (this->_internal_cd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cd());
  }

  // uint32 delayedDestroy = 9;
  if (this->_internal_delayeddestroy() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_delayeddestroy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PropState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropState*>(&to_msg);
  auto& from = static_cast<const PropState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.PropState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rot_ != nullptr);
      if (_this->_impl_.rot_ == nullptr) {
        _this->_impl_.rot_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.rot_);
      } else {
        _this->_impl_.rot_->MergeFrom(*from._impl_.rot_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.size_ != nullptr);
      if (_this->_impl_.size_ == nullptr) {
        _this->_impl_.size_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.size_);
      } else {
        _this->_impl_.size_->MergeFrom(*from._impl_.size_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.speed_ != nullptr);
      if (_this->_impl_.speed_ == nullptr) {
        _this->_impl_.speed_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::Vector3D>(arena, *from._impl_.speed_);
      } else {
        _this->_impl_.speed_->MergeFrom(*from._impl_.speed_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_propfunctype() != 0) {
    _this->_impl_.propfunctype_ = from._impl_.propfunctype_;
  }
  if (from._internal_usetype() != 0) {
    _this->_impl_.usetype_ = from._impl_.usetype_;
  }
  if (from._internal_durable() != 0) {
    _this->_impl_.durable_ = from._impl_.durable_;
  }
  if (from._internal_cd() != 0) {
    _this->_impl_.cd_ = from._impl_.cd_;
  }
  if (from._internal_delayeddestroy() != 0) {
    _this->_impl_.delayeddestroy_ = from._impl_.delayeddestroy_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropState::CopyFrom(const PropState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.PropState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PropState::IsInitialized() const {
  return true;
}

void PropState::InternalSwap(PropState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropState, _impl_.delayeddestroy_)
      + sizeof(PropState::_impl_.delayeddestroy_)
      - PROTOBUF_FIELD_OFFSET(PropState, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata PropState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventInfo::_Internal {
 public:
};

EventInfo::EventInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.EventInfo)
}
inline PROTOBUF_NDEBUG_INLINE EventInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : eventdata_(arena, from.eventdata_),
        _cached_size_{0} {}

EventInfo::EventInfo(
    ::google::protobuf::Arena* arena,
    const EventInfo& from)
    : ::google::protobuf::Message(arena) {
  EventInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, targetagentid_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::targetagentid_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.EventInfo)
}
inline PROTOBUF_NDEBUG_INLINE EventInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : eventdata_(arena),
        _cached_size_{0} {}

inline void EventInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, targetagentid_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::targetagentid_));
}
EventInfo::~EventInfo() {
  // @@protoc_insertion_point(destructor:msg.g2c.EventInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EventInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.eventdata_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EventInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EventInfo, _impl_._cached_size_),
              false,
          },
          &EventInfo::MergeImpl,
          &EventInfo::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 35, 2> EventInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EventInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::EventInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.id_)}},
    // .msg.g2c.EventType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventInfo, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.type_)}},
    // uint64 sourceAgentId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventInfo, _impl_.sourceagentid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.sourceagentid_)}},
    // uint64 targetAgentId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventInfo, _impl_.targetagentid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.targetagentid_)}},
    // string eventData = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.eventdata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .msg.g2c.EventType type = 2;
    {PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 sourceAgentId = 3;
    {PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.sourceagentid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 targetAgentId = 4;
    {PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.targetagentid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string eventData = 5;
    {PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.eventdata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\0\0\0\0\11\0\0"
    "msg.g2c.EventInfo"
    "eventData"
  }},
};

PROTOBUF_NOINLINE void EventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.EventInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eventdata_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.targetagentid_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.targetagentid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EventInfo::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* EventInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.EventInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // .msg.g2c.EventType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // uint64 sourceAgentId = 3;
  if (this->_internal_sourceagentid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_sourceagentid(), target);
  }

  // uint64 targetAgentId = 4;
  if (this->_internal_targetagentid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_targetagentid(), target);
  }

  // string eventData = 5;
  if (!this->_internal_eventdata().empty()) {
    const std::string& _s = this->_internal_eventdata();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msg.g2c.EventInfo.eventData");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.EventInfo)
  return target;
}

::size_t EventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.EventInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string eventData = 5;
  if (!this->_internal_eventdata().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_eventdata());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // .msg.g2c.EventType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint64 sourceAgentId = 3;
  if (this->_internal_sourceagentid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_sourceagentid());
  }

  // uint64 targetAgentId = 4;
  if (this->_internal_targetagentid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_targetagentid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EventInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventInfo*>(&to_msg);
  auto& from = static_cast<const EventInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.EventInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_eventdata().empty()) {
    _this->_internal_set_eventdata(from._internal_eventdata());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_sourceagentid() != 0) {
    _this->_impl_.sourceagentid_ = from._impl_.sourceagentid_;
  }
  if (from._internal_targetagentid() != 0) {
    _this->_impl_.targetagentid_ = from._impl_.targetagentid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventInfo::CopyFrom(const EventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.EventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EventInfo::IsInitialized() const {
  return true;
}

void EventInfo::InternalSwap(EventInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eventdata_, &other->_impl_.eventdata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.targetagentid_)
      + sizeof(EventInfo::_impl_.targetagentid_)
      - PROTOBUF_FIELD_OFFSET(EventInfo, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata EventInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrameDatas::_Internal {
 public:
};

FrameDatas::FrameDatas(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.FrameDatas)
}
inline PROTOBUF_NDEBUG_INLINE FrameDatas::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : triggerevent_(arena, from.triggerevent_),
        _cached_size_{0} {}

FrameDatas::FrameDatas(
    ::google::protobuf::Arena* arena,
    const FrameDatas& from)
    : ::google::protobuf::Message(arena) {
  FrameDatas* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:msg.g2c.FrameDatas)
}
inline PROTOBUF_NDEBUG_INLINE FrameDatas::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : triggerevent_(arena),
        _cached_size_{0} {}

inline void FrameDatas::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
FrameDatas::~FrameDatas() {
  // @@protoc_insertion_point(destructor:msg.g2c.FrameDatas)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrameDatas::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.triggerevent_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FrameDatas::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FrameDatas, _impl_._cached_size_),
              false,
          },
          &FrameDatas::MergeImpl,
          &FrameDatas::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> FrameDatas::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FrameDatas_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::FrameDatas>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string triggerEvent = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FrameDatas, _impl_.triggerevent_)}},
    // float time = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FrameDatas, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float time = 1;
    {PROTOBUF_FIELD_OFFSET(FrameDatas, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string triggerEvent = 2;
    {PROTOBUF_FIELD_OFFSET(FrameDatas, _impl_.triggerevent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\14\0\0\0\0\0"
    "msg.g2c.FrameDatas"
    "triggerEvent"
  }},
};

PROTOBUF_NOINLINE void FrameDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.FrameDatas)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.triggerevent_.ClearToEmpty();
  _impl_.time_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrameDatas::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* FrameDatas::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.FrameDatas)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float time = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_time(), target);
  }

  // string triggerEvent = 2;
  if (!this->_internal_triggerevent().empty()) {
    const std::string& _s = this->_internal_triggerevent();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "msg.g2c.FrameDatas.triggerEvent");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.FrameDatas)
  return target;
}

::size_t FrameDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.FrameDatas)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string triggerEvent = 2;
  if (!this->_internal_triggerevent().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_triggerevent());
  }

  // float time = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FrameDatas::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameDatas*>(&to_msg);
  auto& from = static_cast<const FrameDatas&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.FrameDatas)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_triggerevent().empty()) {
    _this->_internal_set_triggerevent(from._internal_triggerevent());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_time = from._internal_time();
  ::uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameDatas::CopyFrom(const FrameDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.FrameDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrameDatas::IsInitialized() const {
  return true;
}

void FrameDatas::InternalSwap(FrameDatas* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.triggerevent_, &other->_impl_.triggerevent_, arena);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata FrameDatas::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimerState::_Internal {
 public:
};

TimerState::TimerState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.TimerState)
}
inline PROTOBUF_NDEBUG_INLINE TimerState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : framedatas_{visibility, arena, from.framedatas_},
        _cached_size_{0} {}

TimerState::TimerState(
    ::google::protobuf::Arena* arena,
    const TimerState& from)
    : ::google::protobuf::Message(arena) {
  TimerState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, reclocking_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::reclocking_));

  // @@protoc_insertion_point(copy_constructor:msg.g2c.TimerState)
}
inline PROTOBUF_NDEBUG_INLINE TimerState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : framedatas_{visibility, arena},
        _cached_size_{0} {}

inline void TimerState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, reclocking_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::reclocking_));
}
TimerState::~TimerState() {
  // @@protoc_insertion_point(destructor:msg.g2c.TimerState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimerState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TimerState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TimerState, _impl_._cached_size_),
              false,
          },
          &TimerState::MergeImpl,
          &TimerState::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 0, 2> TimerState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TimerState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::TimerState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimerState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.id_)}},
    // repeated .msg.g2c.FrameDatas frameDatas = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.framedatas_)}},
    // bool isStart = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TimerState, _impl_.isstart_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.isstart_)}},
    // bool isEnd = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TimerState, _impl_.isend_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.isend_)}},
    // bool isLaunched = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TimerState, _impl_.islaunched_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.islaunched_)}},
    // bool isPaused = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TimerState, _impl_.ispaused_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.ispaused_)}},
    // float currentTime = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.currenttime_)}},
    // float targetTime = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.targettime_)}},
    // bool reClocking = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TimerState, _impl_.reclocking_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(TimerState, _impl_.reclocking_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .msg.g2c.FrameDatas frameDatas = 2;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.framedatas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool isStart = 3;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.isstart_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool isEnd = 4;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.isend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool isLaunched = 5;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.islaunched_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool isPaused = 6;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.ispaused_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float currentTime = 7;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.currenttime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float targetTime = 8;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.targettime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool reClocking = 9;
    {PROTOBUF_FIELD_OFFSET(TimerState, _impl_.reclocking_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::FrameDatas>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TimerState::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.TimerState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.framedatas_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reclocking_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.reclocking_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimerState::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* TimerState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.TimerState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // repeated .msg.g2c.FrameDatas frameDatas = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_framedatas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_framedatas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool isStart = 3;
  if (this->_internal_isstart() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_isstart(), target);
  }

  // bool isEnd = 4;
  if (this->_internal_isend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_isend(), target);
  }

  // bool isLaunched = 5;
  if (this->_internal_islaunched() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_islaunched(), target);
  }

  // bool isPaused = 6;
  if (this->_internal_ispaused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_ispaused(), target);
  }

  // float currentTime = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_currenttime = this->_internal_currenttime();
  ::uint32_t raw_currenttime;
  memcpy(&raw_currenttime, &tmp_currenttime, sizeof(tmp_currenttime));
  if (raw_currenttime != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_currenttime(), target);
  }

  // float targetTime = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_targettime = this->_internal_targettime();
  ::uint32_t raw_targettime;
  memcpy(&raw_targettime, &tmp_targettime, sizeof(tmp_targettime));
  if (raw_targettime != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_targettime(), target);
  }

  // bool reClocking = 9;
  if (this->_internal_reclocking() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_reclocking(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.TimerState)
  return target;
}

::size_t TimerState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.TimerState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.FrameDatas frameDatas = 2;
  total_size += 1UL * this->_internal_framedatas_size();
  for (const auto& msg : this->_internal_framedatas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // bool isStart = 3;
  if (this->_internal_isstart() != 0) {
    total_size += 2;
  }

  // bool isEnd = 4;
  if (this->_internal_isend() != 0) {
    total_size += 2;
  }

  // bool isLaunched = 5;
  if (this->_internal_islaunched() != 0) {
    total_size += 2;
  }

  // bool isPaused = 6;
  if (this->_internal_ispaused() != 0) {
    total_size += 2;
  }

  // float currentTime = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_currenttime = this->_internal_currenttime();
  ::uint32_t raw_currenttime;
  memcpy(&raw_currenttime, &tmp_currenttime, sizeof(tmp_currenttime));
  if (raw_currenttime != 0) {
    total_size += 5;
  }

  // float targetTime = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_targettime = this->_internal_targettime();
  ::uint32_t raw_targettime;
  memcpy(&raw_targettime, &tmp_targettime, sizeof(tmp_targettime));
  if (raw_targettime != 0) {
    total_size += 5;
  }

  // bool reClocking = 9;
  if (this->_internal_reclocking() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TimerState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimerState*>(&to_msg);
  auto& from = static_cast<const TimerState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.TimerState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_framedatas()->MergeFrom(
      from._internal_framedatas());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_isstart() != 0) {
    _this->_impl_.isstart_ = from._impl_.isstart_;
  }
  if (from._internal_isend() != 0) {
    _this->_impl_.isend_ = from._impl_.isend_;
  }
  if (from._internal_islaunched() != 0) {
    _this->_impl_.islaunched_ = from._impl_.islaunched_;
  }
  if (from._internal_ispaused() != 0) {
    _this->_impl_.ispaused_ = from._impl_.ispaused_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_currenttime = from._internal_currenttime();
  ::uint32_t raw_currenttime;
  memcpy(&raw_currenttime, &tmp_currenttime, sizeof(tmp_currenttime));
  if (raw_currenttime != 0) {
    _this->_impl_.currenttime_ = from._impl_.currenttime_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_targettime = from._internal_targettime();
  ::uint32_t raw_targettime;
  memcpy(&raw_targettime, &tmp_targettime, sizeof(tmp_targettime));
  if (raw_targettime != 0) {
    _this->_impl_.targettime_ = from._impl_.targettime_;
  }
  if (from._internal_reclocking() != 0) {
    _this->_impl_.reclocking_ = from._impl_.reclocking_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimerState::CopyFrom(const TimerState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.TimerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimerState::IsInitialized() const {
  return true;
}

void TimerState::InternalSwap(TimerState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.framedatas_.InternalSwap(&other->_impl_.framedatas_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimerState, _impl_.reclocking_)
      + sizeof(TimerState::_impl_.reclocking_)
      - PROTOBUF_FIELD_OFFSET(TimerState, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata TimerState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameMassage::_Internal {
 public:
  using HasBits = decltype(std::declval<GameMassage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GameMassage, _impl_._has_bits_);
};

GameMassage::GameMassage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:msg.g2c.GameMassage)
}
inline PROTOBUF_NDEBUG_INLINE GameMassage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agentsstate_{visibility, arena, from.agentsstate_},
        itemsstate_{visibility, arena, from.itemsstate_},
        propsstate_{visibility, arena, from.propsstate_},
        eventsinfo_{visibility, arena, from.eventsinfo_},
        timersstate_{visibility, arena, from.timersstate_} {}

GameMassage::GameMassage(
    ::google::protobuf::Arena* arena,
    const GameMassage& from)
    : ::google::protobuf::Message(arena) {
  GameMassage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gameglobalinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameGlobalInfo>(
                              arena, *from._impl_.gameglobalinfo_)
                        : nullptr;
  _impl_.gameinfo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameInfo>(
                              arena, *from._impl_.gameinfo_)
                        : nullptr;
  _impl_.gamestate_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameState>(
                              arena, *from._impl_.gamestate_)
                        : nullptr;
  _impl_.messagetype_ = from._impl_.messagetype_;

  // @@protoc_insertion_point(copy_constructor:msg.g2c.GameMassage)
}
inline PROTOBUF_NDEBUG_INLINE GameMassage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        agentsstate_{visibility, arena},
        itemsstate_{visibility, arena},
        propsstate_{visibility, arena},
        eventsinfo_{visibility, arena},
        timersstate_{visibility, arena} {}

inline void GameMassage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameglobalinfo_),
           0,
           offsetof(Impl_, messagetype_) -
               offsetof(Impl_, gameglobalinfo_) +
               sizeof(Impl_::messagetype_));
}
GameMassage::~GameMassage() {
  // @@protoc_insertion_point(destructor:msg.g2c.GameMassage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameMassage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.gameglobalinfo_;
  delete _impl_.gameinfo_;
  delete _impl_.gamestate_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameMassage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameMassage, _impl_._cached_size_),
              false,
          },
          &GameMassage::MergeImpl,
          &GameMassage::kDescriptorMethods,
          &descriptor_table_proto_2fKoalaAI_5fG2C_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 8, 0, 2> GameMassage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameMassage, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameMassage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::msg::g2c::GameMassage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .msg.g2c.GameMsgType messageType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameMassage, _impl_.messagetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.messagetype_)}},
    // .msg.g2c.GameGlobalInfo gameGlobalInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gameglobalinfo_)}},
    // .msg.g2c.GameInfo gameInfo = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gameinfo_)}},
    // .msg.g2c.GameState gameState = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gamestate_)}},
    // repeated .msg.g2c.AgentState agentsState = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.agentsstate_)}},
    // repeated .msg.g2c.ItemState itemsState = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.itemsstate_)}},
    // repeated .msg.g2c.PropState propsState = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 5, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.propsstate_)}},
    // repeated .msg.g2c.EventInfo eventsInfo = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 6, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.eventsinfo_)}},
    // repeated .msg.g2c.TimerState timersState = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 7, PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.timersstate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .msg.g2c.GameMsgType messageType = 1;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.messagetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .msg.g2c.GameGlobalInfo gameGlobalInfo = 2;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gameglobalinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.GameInfo gameInfo = 3;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gameinfo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .msg.g2c.GameState gameState = 4;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gamestate_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msg.g2c.AgentState agentsState = 5;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.agentsstate_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msg.g2c.ItemState itemsState = 6;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.itemsstate_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msg.g2c.PropState propsState = 7;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.propsstate_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msg.g2c.EventInfo eventsInfo = 8;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.eventsinfo_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .msg.g2c.TimerState timersState = 9;
    {PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.timersstate_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::msg::g2c::GameGlobalInfo>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::GameInfo>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::GameState>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::AgentState>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::ItemState>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::PropState>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::EventInfo>()},
    {::_pbi::TcParser::GetTable<::msg::g2c::TimerState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameMassage::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.g2c.GameMassage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agentsstate_.Clear();
  _impl_.itemsstate_.Clear();
  _impl_.propsstate_.Clear();
  _impl_.eventsinfo_.Clear();
  _impl_.timersstate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.gameglobalinfo_ != nullptr);
      _impl_.gameglobalinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.gameinfo_ != nullptr);
      _impl_.gameinfo_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.gamestate_ != nullptr);
      _impl_.gamestate_->Clear();
    }
  }
  _impl_.messagetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameMassage::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GameMassage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.g2c.GameMassage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .msg.g2c.GameMsgType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_messagetype(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .msg.g2c.GameGlobalInfo gameGlobalInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.gameglobalinfo_, _impl_.gameglobalinfo_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.GameInfo gameInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.gameinfo_, _impl_.gameinfo_->GetCachedSize(), target, stream);
  }

  // .msg.g2c.GameState gameState = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.gamestate_, _impl_.gamestate_->GetCachedSize(), target, stream);
  }

  // repeated .msg.g2c.AgentState agentsState = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_agentsstate_size());
       i < n; i++) {
    const auto& repfield = this->_internal_agentsstate().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .msg.g2c.ItemState itemsState = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_itemsstate_size());
       i < n; i++) {
    const auto& repfield = this->_internal_itemsstate().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .msg.g2c.PropState propsState = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_propsstate_size());
       i < n; i++) {
    const auto& repfield = this->_internal_propsstate().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .msg.g2c.EventInfo eventsInfo = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_eventsinfo_size());
       i < n; i++) {
    const auto& repfield = this->_internal_eventsinfo().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .msg.g2c.TimerState timersState = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_timersstate_size());
       i < n; i++) {
    const auto& repfield = this->_internal_timersstate().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.g2c.GameMassage)
  return target;
}

::size_t GameMassage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.g2c.GameMassage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .msg.g2c.AgentState agentsState = 5;
  total_size += 1UL * this->_internal_agentsstate_size();
  for (const auto& msg : this->_internal_agentsstate()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .msg.g2c.ItemState itemsState = 6;
  total_size += 1UL * this->_internal_itemsstate_size();
  for (const auto& msg : this->_internal_itemsstate()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .msg.g2c.PropState propsState = 7;
  total_size += 1UL * this->_internal_propsstate_size();
  for (const auto& msg : this->_internal_propsstate()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .msg.g2c.EventInfo eventsInfo = 8;
  total_size += 1UL * this->_internal_eventsinfo_size();
  for (const auto& msg : this->_internal_eventsinfo()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .msg.g2c.TimerState timersState = 9;
  total_size += 1UL * this->_internal_timersstate_size();
  for (const auto& msg : this->_internal_timersstate()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .msg.g2c.GameGlobalInfo gameGlobalInfo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gameglobalinfo_);
    }

    // .msg.g2c.GameInfo gameInfo = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gameinfo_);
    }

    // .msg.g2c.GameState gameState = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gamestate_);
    }

  }
  // .msg.g2c.GameMsgType messageType = 1;
  if (this->_internal_messagetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameMassage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameMassage*>(&to_msg);
  auto& from = static_cast<const GameMassage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:msg.g2c.GameMassage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_agentsstate()->MergeFrom(
      from._internal_agentsstate());
  _this->_internal_mutable_itemsstate()->MergeFrom(
      from._internal_itemsstate());
  _this->_internal_mutable_propsstate()->MergeFrom(
      from._internal_propsstate());
  _this->_internal_mutable_eventsinfo()->MergeFrom(
      from._internal_eventsinfo());
  _this->_internal_mutable_timersstate()->MergeFrom(
      from._internal_timersstate());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.gameglobalinfo_ != nullptr);
      if (_this->_impl_.gameglobalinfo_ == nullptr) {
        _this->_impl_.gameglobalinfo_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameGlobalInfo>(arena, *from._impl_.gameglobalinfo_);
      } else {
        _this->_impl_.gameglobalinfo_->MergeFrom(*from._impl_.gameglobalinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.gameinfo_ != nullptr);
      if (_this->_impl_.gameinfo_ == nullptr) {
        _this->_impl_.gameinfo_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameInfo>(arena, *from._impl_.gameinfo_);
      } else {
        _this->_impl_.gameinfo_->MergeFrom(*from._impl_.gameinfo_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.gamestate_ != nullptr);
      if (_this->_impl_.gamestate_ == nullptr) {
        _this->_impl_.gamestate_ =
            ::google::protobuf::Message::CopyConstruct<::msg::g2c::GameState>(arena, *from._impl_.gamestate_);
      } else {
        _this->_impl_.gamestate_->MergeFrom(*from._impl_.gamestate_);
      }
    }
  }
  if (from._internal_messagetype() != 0) {
    _this->_impl_.messagetype_ = from._impl_.messagetype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameMassage::CopyFrom(const GameMassage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.g2c.GameMassage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameMassage::IsInitialized() const {
  return true;
}

void GameMassage::InternalSwap(GameMassage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.agentsstate_.InternalSwap(&other->_impl_.agentsstate_);
  _impl_.itemsstate_.InternalSwap(&other->_impl_.itemsstate_);
  _impl_.propsstate_.InternalSwap(&other->_impl_.propsstate_);
  _impl_.eventsinfo_.InternalSwap(&other->_impl_.eventsinfo_);
  _impl_.timersstate_.InternalSwap(&other->_impl_.timersstate_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.messagetype_)
      + sizeof(GameMassage::_impl_.messagetype_)
      - PROTOBUF_FIELD_OFFSET(GameMassage, _impl_.gameglobalinfo_)>(
          reinterpret_cast<char*>(&_impl_.gameglobalinfo_),
          reinterpret_cast<char*>(&other->_impl_.gameglobalinfo_));
}

::google::protobuf::Metadata GameMassage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace g2c
}  // namespace msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_proto_2fKoalaAI_5fG2C_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
